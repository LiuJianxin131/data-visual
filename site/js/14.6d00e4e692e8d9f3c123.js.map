{"version":3,"sources":["webpack:///./FrontEnd/components/color-input-group/index.tsx","webpack:///./FrontEnd/base/color-input/index.tsx","webpack:///./FrontEnd/components/color-input/index.tsx","webpack:///./FrontEnd/controls/palette/index.tsx"],"names":["ColorInputGroup","react__WEBPACK_IMPORTED_MODULE_0__","Component","[object Object]","props","super","this","handleColorComplete","bind","handleColorChange","state","colors","onColorComplete","idx","color","setState","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","$splice","nextProps","createElement","className","map","_components_color_input__WEBPACK_IMPORTED_MODULE_2__","a","disabled","key","onColorChange","defaultProps","300","e","o","301","40","t","r","l","color_input_ColorInput","react","handleColorPickerChange","handleInputChange","target","value","colorResult","hex","rgb","g","b","onColorPreviewClick","isShowColorPicker","onColorPickerChangeComplete","onInputKeyDown","colorPickerStyle","onClick","style","background","type","onKeyDown","onChange","Object","assign","lib","ChromePicker","onChangeComplete","autoPosition","position","top","zIndex","d","i","MaskStyle","left","width","height","components_color_input_ColorInput","inputRef","createRef","showColorPicker","hideColorPicker","handleInputKeyDown","handleColorPickerChangeComplete","colorPickStyle","toLocaleLowerCase","currentTarget","rect","current","getBoundingClientRect","nextState","ref","display","hidden","613","773","h","n","s","Palette","handleSwitchChange","updateChart","chart","immutability_helper__WEBPACK_IMPORTED_MODULE_3___default","option","$set","checked","newColors","colorFromGlobal","globalColor","name","chartColors","length","_components_setting_item__WEBPACK_IMPORTED_MODULE_5__","margin","borderBottom","antd_es_switch__WEBPACK_IMPORTED_MODULE_1__","_components_color_input_group__WEBPACK_IMPORTED_MODULE_4__","default"],"mappings":"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","file":"js/14.6d00e4e692e8d9f3c123.js","sourcesContent":["import * as React from 'react';\nimport update from 'immutability-helper';\nimport ColorInput from '@components/color-input';\n\ninterface IProps {\n  colors: string[];\n  disabled?: boolean;\n  onColorComplete: (colors: string[]) => void;\n}\n\ninterface IState {\n  colors: ReadonlyArray<string>;\n}\n\nexport default class ColorInputGroup extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleColorComplete = this.handleColorComplete.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.state = { colors: [] };\n  }\n\n  static defaultProps = {\n    disabled: false\n  };\n\n  handleColorComplete() {\n    this.props.onColorComplete([...this.state.colors]);\n  }\n\n  handleColorChange(idx: number, color: string) {\n    this.setState({\n      colors: update(this.state.colors, {\n        $splice: [[idx, 1, color]]\n      })\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: IProps) {\n    return { colors: nextProps.colors };\n  }\n\n  render() {\n    const { colors } = this.state;\n    return (\n      <div className='color_input_group'>\n        {colors.map((color, idx) => {\n          return (\n            <ColorInput disabled={this.props.disabled} key={idx} color={color} onColorChange={(color) => this.handleColorChange(idx, color)}\n              onColorComplete={this.handleColorComplete} >\n            </ColorInput>\n          );\n        })}\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  colorPickerStyle?: React.CSSProperties;\n  isShowColorPicker?: boolean;\n  onColorChange?: (color: string) => void;\n  onColorPreviewClick?: () => void;\n  onColorPickerChangeComplete?: (colorResult: ColorResult) => void;\n  onInputKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  style?: React.CSSProperties;\n}\n\nexport default class ColorInput extends React.Component<IProps, undefined> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  static defaultProps = {\n    isShowColorPicker: false,\n    disabled: false,\n    autoPosition: false,\n    colorPickerStyle: {\n      position: 'relative',\n      top: '10px',\n      zIndex: 1\n    }\n  };\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onColorChange(e.target.value);\n  }\n\n  handleColorPickerChange(colorResult: ColorResult) {\n    let color = colorResult.hex;\n    if (colorResult.rgb.a !== 1) {\n      const { r, g, b, a } = colorResult.rgb;\n      color = `rgba(${r},${g},${b},${a})`;\n    }\n    this.props.onColorChange(color);\n  }\n\n  render() {\n    const { color } = this.props;\n    const { onColorPreviewClick, isShowColorPicker, onColorPickerChangeComplete, onInputKeyDown, disabled, colorPickerStyle } = this.props;\n    return (\n      <div className={`color_input_wrapper ${disabled && 'color_input_wrapper_disable'}`}>\n        <div className='color_preview_wrapper' onClick={onColorPreviewClick} >\n          <span style={{ background: color }} className='color_preview'></span>\n        </div>\n        <input disabled={disabled} type='text' className='color_input' value={color} onKeyDown={onInputKeyDown} onChange={this.handleInputChange} />\n        <div className='color_colorpicker' style={{ ...colorPickerStyle }}>\n          {isShowColorPicker && !disabled && <ChromePicker color={color} onChangeComplete={onColorPickerChangeComplete} onChange={this.handleColorPickerChange} />}\n        </div>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport RawInputColor from '@base/color-input';\nimport { ColorResult } from 'react-color';\n\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  onColorChange: (color: string) => void;\n  onColorComplete: (color: string) => void;\n}\n\ninterface IState {\n  isShowColorPicker: boolean;\n  colorPickStyle: React.CSSProperties;\n}\n\nconst MaskStyle = {\n  position: 'fixed' as 'fixed',\n  left: 0,\n  top: 0,\n  zIndex: 1,\n  width: '100%',\n  height: '100%'\n};\n\nexport default class ColorInput extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.showColorPicker = this.showColorPicker.bind(this);\n    this.hideColorPicker = this.hideColorPicker.bind(this);\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n    this.handleColorPickerChangeComplete = this.handleColorPickerChangeComplete.bind(this);\n\n    this.state = {\n      isShowColorPicker: false,\n      colorPickStyle: {}\n    };\n  }\n\n  inputRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  static defaultProps = {\n    disabled: false\n  };\n\n  handleColorPickerChangeComplete(colorResult: ColorResult) {\n    const { r, g, b, a } = colorResult.rgb;\n    const color = `rgba(${r},${g},${b},${a})`;\n    this.props.onColorComplete(color);\n  }\n\n  handleInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    e.key.toLocaleLowerCase() === 'enter' && this.props.onColorComplete(e.currentTarget.value);\n  }\n\n  showColorPicker() {\n    if (this.props.disabled) return;\n    let rect = this.inputRef.current.getBoundingClientRect();\n    this.setState({\n      isShowColorPicker: true,\n      colorPickStyle: {\n        zIndex: 1,\n        position: 'fixed',\n        top: rect.top + 25,\n        left: rect.left - 200\n      }\n    });\n  }\n\n  hideColorPicker() {\n    this.setState({ isShowColorPicker: false });\n  }\n\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\n    return this.props.disabled !== nextProps.disabled || this.props.color !== nextProps.color || this.state.isShowColorPicker !== nextState.isShowColorPicker;\n  }\n\n  render() {\n    const { color, onColorChange, disabled } = this.props;\n    const { isShowColorPicker, colorPickStyle } = this.state;\n    return (\n      <div ref={this.inputRef} style={{ display: 'inline-block' }}>\n        <div className='color_mask' onClick={this.hideColorPicker} hidden={!isShowColorPicker} style={{ ...MaskStyle }}></div>\n        <RawInputColor colorPickerStyle={colorPickStyle} disabled={disabled} onColorChange={onColorChange} onInputKeyDown={this.handleInputKeyDown} onColorPickerChangeComplete={this.handleColorPickerChangeComplete} style={{ position: 'relative' }}\n          isShowColorPicker={isShowColorPicker} onColorPreviewClick={this.showColorPicker} color={color} >\n        </RawInputColor>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport { Switch } from 'antd';\nimport update from 'immutability-helper';\nimport ColorInputGroup from '@components/color-input-group';\nimport Item from '@components/setting-item';\nimport { IControlProps } from '@controls/index';\n\nimport './style.styl';\n\nexport default class Palette extends React.Component<IControlProps, undefined> {\n  constructor(props: IControlProps) {\n    super(props);\n    this.handleColorComplete = this.handleColorComplete.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n  }\n\n  handleColorComplete(colors: string[]) {\n    const { updateChart, chart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        color: { $set: colors }\n      }\n    }));\n  }\n\n  handleSwitchChange(checked: boolean) {\n    const { updateChart, chart, colors } = this.props;\n    let newColors = [...chart.option.color];\n    checked && (newColors = [...colors]);\n    updateChart(update(chart, {\n      option: {\n        color: { $set: newColors }\n      },\n      colorFromGlobal: { $set: checked }\n    }));\n  }\n\n  shouldComponentUpdate(nextProps: IControlProps) {\n    return nextProps.colors !== this.props.colors\n      || nextProps.chart.colorFromGlobal !== this.props.chart.colorFromGlobal\n      || nextProps.chart.option.color !== this.props.chart.option.color;\n  }\n\n  render() {\n    const { chart, colors: globalColor, name } = this.props;\n    const { colorFromGlobal, option: { color: chartColors } } = chart;\n    let colors = colorFromGlobal || chartColors.length === 0 ? globalColor : chartColors;\n    return (\n      <Item style={{ margin: '-5px 0 0 0', borderBottom: 'none' }} name={name}>\n        <div>\n          <div className='palette_switch_wrapper'>\n            <span className='palette_text'>全局色系</span>\n            <Switch className='palette_switch' checked={colorFromGlobal} onChange={this.handleSwitchChange} />\n          </div>\n          <ColorInputGroup disabled={colorFromGlobal} colors={colors} onColorComplete={this.handleColorComplete} />\n        </div>\n      </Item>\n    );\n  }\n}"],"sourceRoot":""}