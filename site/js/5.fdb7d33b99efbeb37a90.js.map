{"version":3,"sources":["webpack:///./FrontEnd/controls/pile/index.tsx"],"names":["Pile","react__WEBPACK_IMPORTED_MODULE_0__","Component","[object Object]","props","super","this","handleSeriesChange","bind","handleSwitchChange","handleInputChange","state","select","value","setState","checked","stack","chart","updateChart","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","option","series","$set","e","target","map","item","idx","createElement","antd_es_select__WEBPACK_IMPORTED_MODULE_4__","a","Option","key","nextProps","prevState","length","nextState","style","color","textAlign","_components_setting_item__WEBPACK_IMPORTED_MODULE_6__","name","size","onChange","renderSeries","antd_es_switch__WEBPACK_IMPORTED_MODULE_2__","className"],"mappings":"+MAUcA,UAAoBC,EAAAC,UAChCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,mBAAqBD,KAAKC,mBAAmBC,KAAKF,MACvDA,KAAKG,mBAAqBH,KAAKG,mBAAmBD,KAAKF,MACvDA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MAErDA,KAAKK,OACHC,OAAQ,GAIZT,mBAAmBU,GACjBP,KAAKQ,UACHF,OAAQC,IAIZV,mBAAmBY,GACjB,IAAIC,EAAQD,EAAU,KAAO,KAC7B,MAAME,MAAEA,EAAKC,YAAEA,GAAgBZ,KAAKF,OAC9BQ,OAAEA,GAAWN,KAAKK,MACxBO,EAAYC,IAAOF,GACjBG,QACEC,QACElB,CAACS,IACCI,OAASM,KAAMN,SAOzBb,kBAAkBoB,GAChB,MAAMP,EAAQO,EAAEC,OAAOX,OACjBD,OAAEA,GAAWN,KAAKK,OAClBO,YAAEA,EAAWD,MAAEA,GAAUX,KAAKF,MACpCc,EAAYC,IAAOF,GACjBG,QACEC,QACElB,CAACS,IACCI,OAASM,KAAMN,SAOzBb,eACE,MAAMkB,OAAEA,GAAWf,KAAKF,MAAMa,MAAMG,OACpC,OAAOC,EAAOI,IAAI,CAACC,EAAMC,IAChB1B,EAAA2B,cAACC,EAAAC,EAAOC,QAAOC,IAAKL,EAAKd,MAAOc,QAAYA,EAAM,MAI7DxB,gCAAgC8B,EAA0BC,GACxD,OAAID,EAAUhB,MAAMG,OAAOC,OAAOc,QAAUD,EAAUtB,QAC3CA,OAAQ,GAEZ,KAGTT,sBAAsB8B,EAA0BG,GAC9C,OAAOA,EAAUxB,SAAWN,KAAKK,MAAMC,QAClCqB,EAAUhB,MAAMG,OAAOC,OAAOf,KAAKK,MAAMC,UAAYN,KAAKF,MAAMa,MAAMG,OAAOC,OAAOf,KAAKK,MAAMC,QAGtGT,SACE,MAAMkB,OAAEA,GAAWf,KAAKF,MAAMa,MAAMG,OAEpC,GAAsB,IAAlBC,EAAOc,OACT,OAAOlC,EAAA2B,cAAA,OAAKS,OAASC,MAAO,OAAQC,UAAW,WAAU,QAI3D,IAAIvB,EADeK,EAAOf,KAAKK,MAAMC,QACdI,MAMvB,gBAJWA,IACTA,EAAQ,MAIRf,EAAA2B,cAAA,WACE3B,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,QACTxC,EAAA2B,cAACC,EAAAC,GAAOY,KAAK,QAAQ7B,MAAOP,KAAKK,MAAMC,OAAQ+B,SAAUrC,KAAKC,oBAC3DD,KAAKsC,iBAGV3C,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,MACTxC,EAAA2B,cAACiB,EAAAf,GAAOf,QAAmB,OAAVC,EAAgB2B,SAAUrC,KAAKG,sBAGtC,OAAVO,GACAf,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,SACTxC,EAAA2B,cAAA,SAAOkB,UAAU,QAAQjC,MAAOG,EAAO2B,SAAUrC,KAAKI","file":"js/5.fdb7d33b99efbeb37a90.js","sourcesContent":["import * as React from 'react';\r\nimport update from 'immutability-helper';\r\nimport { Switch, Select } from 'antd';\r\nimport Item from '@components/setting-item';\r\nimport { IControlProps } from '@controls/index';\r\n\r\ninterface IState {\r\n  select: any;\r\n}\r\n\r\nexport default class Pile extends React.Component<IControlProps, IState> {\r\n  constructor(props: IControlProps) {\r\n    super(props);\r\n    this.handleSeriesChange = this.handleSeriesChange.bind(this);\r\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    this.state = {\r\n      select: 0\r\n    };\r\n  }\r\n\r\n  handleSeriesChange(value: any) {\r\n    this.setState({\r\n      select: value\r\n    });\r\n  }\r\n\r\n  handleSwitchChange(checked: boolean) {\r\n    let stack = checked ? '默认' : null;\r\n    const { chart, updateChart } = this.props;\r\n    const { select } = this.state;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        series: {\r\n          [select]: {\r\n            stack: { $set: stack }\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const stack = e.target.value;\r\n    const { select } = this.state;\r\n    const { updateChart, chart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        series: {\r\n          [select]: {\r\n            stack: { $set: stack }\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  renderSeries() {\r\n    const { series } = this.props.chart.option;\r\n    return series.map((item, idx) => {\r\n      return <Select.Option key={idx} value={idx} >{`系列${idx + 1}`}</Select.Option>;\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: IControlProps, prevState: IState) {\r\n    if (nextProps.chart.option.series.length <= prevState.select) {\r\n      return { select: 0 };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IControlProps, nextState: IState) {\r\n    return nextState.select !== this.state.select\r\n      || nextProps.chart.option.series[this.state.select] !== this.props.chart.option.series[this.state.select];\r\n  }\r\n\r\n  render() {\r\n    const { series } = this.props.chart.option;\r\n\r\n    if (series.length === 0) {\r\n      return <div style={{ color: '#fff', textAlign: 'center' }}>系列为空</div>;\r\n    }\r\n\r\n    const seriesItem = series[this.state.select];\r\n    let stack = seriesItem.stack;\r\n\r\n    if (typeof stack === 'undefined') {\r\n      stack = null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item name='选择系列'>\r\n          <Select size='small' value={this.state.select} onChange={this.handleSeriesChange}>\r\n            {this.renderSeries()}\r\n          </Select>\r\n        </Item>\r\n        <Item name='开启'>\r\n          <Switch checked={stack !== null} onChange={this.handleSwitchChange} />\r\n        </Item>\r\n        {\r\n          stack !== null &&\r\n          <Item name='stack'>\r\n            <input className='input' value={stack} onChange={this.handleInputChange} />\r\n          </Item>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}