{"version":3,"sources":["webpack:///./FrontEnd/controls/axis/index.tsx","webpack:///./FrontEnd/base/color-input/index.tsx","webpack:///./FrontEnd/components/color-input/index.tsx","webpack:///./FrontEnd/controls/y-axis/index.tsx"],"names":["RadioGroup","antd_es_radio__WEBPACK_IMPORTED_MODULE_10__","a","Group","Axis","react__WEBPACK_IMPORTED_MODULE_0__","Component","[object Object]","props","super","this","handleShowChange","bind","handleNameChange","handleNameColorChange","handleNameColorComplete","handleNameSizeChange","handleNameWeightChange","handleNameStyleChange","handleAxisColorChange","handleAxisColorComplete","handleAxisWidth","handleAxisStyleType","handleCategoryChange","handleChangeType","handlePositionChange","handleTickShowChange","state","nameColor","axisColor","checked","chart","updateChart","axisType","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","option","show","$set","e","name","target","value","color","setState","nameTextStyle","num","fontSize","weight","fontWeight","style","fontStyle","axisLine","lineStyle","width","type","category","split","data","ex","console","error","log","join","createElement","_components_setting_item__WEBPACK_IMPORTED_MODULE_2__","className","onChange","currType","currAxisType","otherAxisType","otherType","position","axisTick","nextProps","nextState","isTickShow","antd_es_switch__WEBPACK_IMPORTED_MODULE_4__","renderCategoryData","_components_color_input__WEBPACK_IMPORTED_MODULE_3__","onColorChange","onColorComplete","antd_es_input_number__WEBPACK_IMPORTED_MODULE_6__","min","size","antd_es_select__WEBPACK_IMPORTED_MODULE_8__","defaultValue","Option","300","t","301","40","o","n","color_input_ColorInput","react","handleColorPickerChange","handleInputChange","colorResult","hex","rgb","r","g","b","onColorPreviewClick","isShowColorPicker","onColorPickerChangeComplete","onInputKeyDown","disabled","colorPickerStyle","onClick","background","onKeyDown","Object","assign","lib","ChromePicker","onChangeComplete","defaultProps","autoPosition","top","zIndex","d","s","MaskStyle","left","height","components_color_input_ColorInput","inputRef","createRef","showColorPicker","hideColorPicker","handleInputKeyDown","handleColorPickerChangeComplete","colorPickStyle","key","toLocaleLowerCase","currentTarget","rect","current","getBoundingClientRect","ref","display","hidden","762","i","YAxis","_controls_axis__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/6.d74639db60b6b6d454b2.js","sourcesContent":["import * as React from 'react';\nimport update from 'immutability-helper';\nimport Item from '@components/setting-item';\nimport ColorInput from '@components/color-input';\nimport { Switch, InputNumber, Select, Radio } from 'antd';\nimport { IControlProps } from '@controls/index';\n\nconst RadioGroup = Radio.Group;\n\ninterface IProps extends IControlProps {\n  axisType: 'xAxis' | 'yAxis';\n}\n\ninterface IState {\n  nameColor: string;\n  axisColor: string;\n}\n\nexport default class Axis extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleShowChange = this.handleShowChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleNameColorChange = this.handleNameColorChange.bind(this);\n    this.handleNameColorComplete = this.handleNameColorComplete.bind(this);\n    this.handleNameSizeChange = this.handleNameSizeChange.bind(this);\n    this.handleNameWeightChange = this.handleNameWeightChange.bind(this);\n    this.handleNameStyleChange = this.handleNameStyleChange.bind(this);\n    this.handleAxisColorChange = this.handleAxisColorChange.bind(this);\n    this.handleAxisColorComplete = this.handleAxisColorComplete.bind(this);\n    this.handleAxisWidth = this.handleAxisWidth.bind(this);\n    this.handleAxisStyleType = this.handleAxisStyleType.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleChangeType = this.handleChangeType.bind(this);\n    this.handlePositionChange = this.handlePositionChange.bind(this);\n    this.handleTickShowChange = this.handleTickShowChange.bind(this);\n\n    this.state = {\n      nameColor: '',\n      axisColor: ''\n    };\n  }\n\n  handleShowChange(checked: boolean) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          show: { $set: checked }\n        }\n      }\n    }));\n  }\n\n  handleNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const name = e.target.value;\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          name: { $set: name }\n        }\n      }\n    }));\n  }\n\n  handleNameColorChange(color: string) {\n    this.setState({ nameColor: color });\n  }\n\n  handleNameColorComplete(color: string) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          nameTextStyle: {\n            color: { $set: color }\n          }\n        }\n      }\n    }));\n  }\n\n  handleNameSizeChange(num: number) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          nameTextStyle: {\n            fontSize: { $set: num }\n          }\n        }\n      }\n    }));\n  }\n\n  handleNameWeightChange(weight: string) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          nameTextStyle: {\n            fontWeight: { $set: weight }\n          }\n        }\n      }\n    }));\n  }\n\n  handleNameStyleChange(style: string) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          nameTextStyle: {\n            fontStyle: { $set: style }\n          }\n        }\n      }\n    }));\n  }\n\n  handleAxisColorChange(color: string) {\n    this.setState({ axisColor: color });\n  }\n\n  handleAxisColorComplete(color: string) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          axisLine: {\n            lineStyle: {\n              color: { $set: color }\n            }\n          }\n        }\n      }\n    }));\n  }\n\n  handleAxisWidth(width: number) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          axisLine: {\n            lineStyle: {\n              width: { $set: width }\n            }\n          }\n        }\n      }\n    }));\n  }\n\n  handleAxisStyleType(type: 'normal' | 'dashed' | 'dotted') {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          axisLine: {\n            lineStyle: {\n              type: { $set: type }\n            }\n          }\n        }\n      }\n    }));\n  }\n\n  handleCategoryChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const { chart, updateChart, axisType } = this.props;\n    let value = e.target.value;\n    let category: string[];\n    try {\n      category = value.split(',');\n      updateChart(update(chart, {\n        option: {\n          [axisType]: {\n            data: { $set: category }\n          }\n        }\n      }));\n    } catch (ex) {\n      console.error('类目格式输入错误');\n      console.log(ex);\n    }\n  }\n\n  renderCategoryData() {\n    const axisType = this.props.axisType;\n    const { type, data } = this.props.chart.option[axisType];\n    if (type === 'category') {\n      let value = data.join(',');\n      return (\n        <Item name='类目'>\n          <input className='input' type='text' value={value} onChange={this.handleCategoryChange} />\n        </Item>);\n    }\n    return null;\n  }\n\n  handleChangeType(e: any) {\n    const currType = e.target.value;\n    const { chart, updateChart, axisType: currAxisType } = this.props;\n    let otherAxisType = currAxisType === 'xAxis' ? 'yAxis' : 'xAxis';\n    let otherType = currType === 'value' ? 'category' : 'value';\n\n    updateChart(update(chart, {\n      option: {\n        [currAxisType]: {\n          type: { $set: currType }\n        },\n        [otherAxisType]: {\n          type: { $set: otherType }\n        }\n      }\n    }));\n  }\n\n  handlePositionChange(e: any) {\n    const position = e.target.value;\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          position: { $set: position }\n        }\n      }\n    }));\n  }\n\n  handleTickShowChange(checked: boolean) {\n    const { chart, updateChart, axisType } = this.props;\n    updateChart(update(chart, {\n      option: {\n        [axisType]: {\n          axisTick: {\n            show: { $set: checked }\n          }\n        }\n      }\n    }));\n  }\n\n  static getDerivedStateFromProps(nextProps: IProps) {\n    const axisType = nextProps.axisType;\n    const { nameTextStyle, axisLine: { lineStyle } } = nextProps.chart.option[axisType];\n    return { nameColor: nameTextStyle.color, axisColor: lineStyle.color };\n  }\n\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\n    const axisType = this.props.axisType;\n    return this.props.chart.option[axisType] !== nextProps.chart.option[axisType]\n      || nextState.axisColor !== this.state.axisColor\n      || nextState.nameColor !== this.state.nameColor;\n  }\n\n  render() {\n    const axisType = this.props.axisType;\n    const {\n      show, nameTextStyle, axisLine: { lineStyle }, name,\n      type, position, axisTick: { show: isTickShow }\n    } = this.props.chart.option[axisType];\n\n    const { nameColor, axisColor } = this.state;\n\n    return (\n      <div className='axis_wrapper'>\n        <Item name='显示'>\n          <Switch checked={show} onChange={this.handleShowChange} />\n        </Item>\n        <Item name='轴类型'>\n          <RadioGroup value={type} onChange={this.handleChangeType}>\n            <Radio value='value' style={{ color: '#fff' }}>数值</Radio>\n            <Radio value='category' style={{ color: '#fff' }}>类目</Radio>\n          </RadioGroup>\n        </Item>\n        <Item name='位置'>\n          {\n            axisType === 'xAxis' &&\n            <RadioGroup value={position} onChange={this.handlePositionChange}>\n              <Radio value='bottom' style={{ color: '#fff' }}>底</Radio>\n              <Radio value='top' style={{ color: '#fff' }}>顶</Radio>\n            </RadioGroup>\n          }\n          {\n            axisType === 'yAxis' &&\n            <RadioGroup value={position} onChange={this.handlePositionChange}>\n              <Radio value='left' style={{ color: '#fff' }}>左</Radio>\n              <Radio value='right' style={{ color: '#fff' }}>右</Radio>\n            </RadioGroup>\n          }\n        </Item>\n        {this.renderCategoryData()}\n        <Item name='名称'>\n          <input className='input' type='text' value={name} onChange={this.handleNameChange} />\n        </Item>\n        <Item name='名称颜色'>\n          <ColorInput color={nameColor} onColorChange={this.handleNameColorChange} onColorComplete={this.handleNameColorComplete} />\n        </Item>\n        <Item className='fontsize' name='名称大小'>\n          <InputNumber min={1} value={nameTextStyle.fontSize} size='small' onChange={this.handleNameSizeChange} />\n          <Select size='small' defaultValue={nameTextStyle.fontWeight} onChange={this.handleNameWeightChange}>\n            <Select.Option value='normal' >normal</Select.Option>\n            <Select.Option value='lighter' >lighter</Select.Option>\n            <Select.Option value='bold' >bold</Select.Option>\n          </Select>\n        </Item>\n        <Item name='名称样式'>\n          <Select size='small' defaultValue={nameTextStyle.fontStyle} onChange={this.handleNameStyleChange}>\n            <Select.Option value='normal' >normal</Select.Option>\n            <Select.Option value='italic' >italic</Select.Option>\n            <Select.Option value='oblique' >oblique</Select.Option>\n          </Select>\n        </Item>\n        <Item name='刻度显示'>\n          <Switch checked={isTickShow} onChange={this.handleTickShowChange} />\n        </Item>\n        <Item name='轴线颜色'>\n          <ColorInput color={axisColor} onColorChange={this.handleAxisColorChange} onColorComplete={this.handleAxisColorComplete} />\n        </Item>\n        <Item name='轴线宽度'>\n          <InputNumber size='small' value={lineStyle.width} onChange={this.handleAxisWidth} />\n        </Item>\n        <Item name='轴线类型'>\n          <Select size='small' defaultValue={lineStyle.type} onChange={this.handleAxisStyleType}>\n            <Select.Option value='solid' >solid</Select.Option>\n            <Select.Option value='dashed' >dashed</Select.Option>\n            <Select.Option value='dotted' >dotted</Select.Option>\n          </Select>\n        </Item>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  colorPickerStyle?: React.CSSProperties;\n  isShowColorPicker?: boolean;\n  onColorChange?: (color: string) => void;\n  onColorPreviewClick?: () => void;\n  onColorPickerChangeComplete?: (colorResult: ColorResult) => void;\n  onInputKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  style?: React.CSSProperties;\n}\n\nexport default class ColorInput extends React.Component<IProps, undefined> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  static defaultProps = {\n    isShowColorPicker: false,\n    disabled: false,\n    autoPosition: false,\n    colorPickerStyle: {\n      position: 'relative',\n      top: '10px',\n      zIndex: 1\n    }\n  };\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onColorChange(e.target.value);\n  }\n\n  handleColorPickerChange(colorResult: ColorResult) {\n    let color = colorResult.hex;\n    if (colorResult.rgb.a !== 1) {\n      const { r, g, b, a } = colorResult.rgb;\n      color = `rgba(${r},${g},${b},${a})`;\n    }\n    this.props.onColorChange(color);\n  }\n\n  render() {\n    const { color } = this.props;\n    const { onColorPreviewClick, isShowColorPicker, onColorPickerChangeComplete, onInputKeyDown, disabled, colorPickerStyle } = this.props;\n    return (\n      <div className={`color_input_wrapper ${disabled && 'color_input_wrapper_disable'}`}>\n        <div className='color_preview_wrapper' onClick={onColorPreviewClick} >\n          <span style={{ background: color }} className='color_preview'></span>\n        </div>\n        <input disabled={disabled} type='text' className='color_input' value={color} onKeyDown={onInputKeyDown} onChange={this.handleInputChange} />\n        <div className='color_colorpicker' style={{ ...colorPickerStyle }}>\n          {isShowColorPicker && !disabled && <ChromePicker color={color} onChangeComplete={onColorPickerChangeComplete} onChange={this.handleColorPickerChange} />}\n        </div>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport RawInputColor from '@base/color-input';\nimport { ColorResult } from 'react-color';\n\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  onColorChange: (color: string) => void;\n  onColorComplete: (color: string) => void;\n}\n\ninterface IState {\n  isShowColorPicker: boolean;\n  colorPickStyle: React.CSSProperties;\n}\n\nconst MaskStyle = {\n  position: 'fixed' as 'fixed',\n  left: 0,\n  top: 0,\n  zIndex: 1,\n  width: '100%',\n  height: '100%'\n};\n\nexport default class ColorInput extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.showColorPicker = this.showColorPicker.bind(this);\n    this.hideColorPicker = this.hideColorPicker.bind(this);\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n    this.handleColorPickerChangeComplete = this.handleColorPickerChangeComplete.bind(this);\n\n    this.state = {\n      isShowColorPicker: false,\n      colorPickStyle: {}\n    };\n  }\n\n  inputRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  static defaultProps = {\n    disabled: false\n  };\n\n  handleColorPickerChangeComplete(colorResult: ColorResult) {\n    const { r, g, b, a } = colorResult.rgb;\n    const color = `rgba(${r},${g},${b},${a})`;\n    this.props.onColorComplete(color);\n  }\n\n  handleInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    e.key.toLocaleLowerCase() === 'enter' && this.props.onColorComplete(e.currentTarget.value);\n  }\n\n  showColorPicker() {\n    if (this.props.disabled) return;\n    let rect = this.inputRef.current.getBoundingClientRect();\n    this.setState({\n      isShowColorPicker: true,\n      colorPickStyle: {\n        zIndex: 1,\n        position: 'fixed',\n        top: rect.top + 25,\n        left: rect.left - 200\n      }\n    });\n  }\n\n  hideColorPicker() {\n    this.setState({ isShowColorPicker: false });\n  }\n\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\n    return this.props.disabled !== nextProps.disabled || this.props.color !== nextProps.color || this.state.isShowColorPicker !== nextState.isShowColorPicker;\n  }\n\n  render() {\n    const { color, onColorChange, disabled } = this.props;\n    const { isShowColorPicker, colorPickStyle } = this.state;\n    return (\n      <div ref={this.inputRef} style={{ display: 'inline-block' }}>\n        <div className='color_mask' onClick={this.hideColorPicker} hidden={!isShowColorPicker} style={{ ...MaskStyle }}></div>\n        <RawInputColor colorPickerStyle={colorPickStyle} disabled={disabled} onColorChange={onColorChange} onInputKeyDown={this.handleInputKeyDown} onColorPickerChangeComplete={this.handleColorPickerChangeComplete} style={{ position: 'relative' }}\n          isShowColorPicker={isShowColorPicker} onColorPreviewClick={this.showColorPicker} color={color} >\n        </RawInputColor>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport Axis from '@controls/axis';\nimport { IControlProps } from '@controls/index';\n\nexport default class YAxis extends React.Component<IControlProps, undefined> {\n  render() {\n    return <Axis axisType='yAxis' {...this.props} />;\n  }\n}"],"sourceRoot":""}