{"version":3,"sources":["webpack:///./FrontEnd/base/color-input/index.tsx","webpack:///./FrontEnd/components/color-input/index.tsx","webpack:///./FrontEnd/controls/label/index.tsx"],"names":["color_input_ColorInput","react","Component","[object Object]","props","super","this","handleColorPickerChange","bind","handleInputChange","e","onColorChange","target","value","colorResult","color","hex","rgb","a","r","g","b","onColorPreviewClick","isShowColorPicker","onColorPickerChangeComplete","onInputKeyDown","disabled","colorPickerStyle","createElement","className","onClick","style","background","type","onKeyDown","onChange","Object","assign","lib","ChromePicker","onChangeComplete","defaultProps","autoPosition","position","top","zIndex","o","d","t","MaskStyle","left","width","height","components_color_input_ColorInput","inputRef","createRef","showColorPicker","hideColorPicker","handleInputKeyDown","handleColorPickerChangeComplete","state","colorPickStyle","onColorComplete","key","toLocaleLowerCase","currentTarget","rect","current","getBoundingClientRect","setState","nextProps","nextState","ref","display","hidden","774","p","n","l","i","s","h","c","Label","react__WEBPACK_IMPORTED_MODULE_0__","handleShowChange","handleFontColorChange","handleFontColorComplete","handleFontSizeChange","handleFontWeightChange","handleFontStyle","handleRotateChange","series","chart","option","newSeries","forEach","item","push","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","label","$set","checked","updateChart","getNewSeries","seriesItemTemplate","show","fontSize","fontWeight","fontStyle","rotate","_components_setting_item__WEBPACK_IMPORTED_MODULE_2__","name","antd_es_switch__WEBPACK_IMPORTED_MODULE_4__","_components_color_input__WEBPACK_IMPORTED_MODULE_3__","antd_es_input_number__WEBPACK_IMPORTED_MODULE_6__","size","antd_es_select__WEBPACK_IMPORTED_MODULE_8__","defaultValue","Option"],"mappings":"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","file":"js/11.10901c8656f6f4341275.js","sourcesContent":["import * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport './style.styl';\r\n\r\ninterface IProps {\r\n  color: string;\r\n  disabled?: boolean;\r\n  colorPickerStyle?: React.CSSProperties;\r\n  isShowColorPicker?: boolean;\r\n  onColorChange?: (color: string) => void;\r\n  onColorPreviewClick?: () => void;\r\n  onColorPickerChangeComplete?: (colorResult: ColorResult) => void;\r\n  onInputKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport default class ColorInput extends React.Component<IProps, undefined> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  static defaultProps = {\r\n    isShowColorPicker: false,\r\n    disabled: false,\r\n    autoPosition: false,\r\n    colorPickerStyle: {\r\n      position: 'relative',\r\n      top: '10px',\r\n      zIndex: 1\r\n    }\r\n  };\r\n\r\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.props.onColorChange(e.target.value);\r\n  }\r\n\r\n  handleColorPickerChange(colorResult: ColorResult) {\r\n    let color = colorResult.hex;\r\n    if (colorResult.rgb.a !== 1) {\r\n      const { r, g, b, a } = colorResult.rgb;\r\n      color = `rgba(${r},${g},${b},${a})`;\r\n    }\r\n    this.props.onColorChange(color);\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props;\r\n    const { onColorPreviewClick, isShowColorPicker, onColorPickerChangeComplete, onInputKeyDown, disabled, colorPickerStyle } = this.props;\r\n    return (\r\n      <div className={`color_input_wrapper ${disabled && 'color_input_wrapper_disable'}`}>\r\n        <div className='color_preview_wrapper' onClick={onColorPreviewClick} >\r\n          <span style={{ background: color }} className='color_preview'></span>\r\n        </div>\r\n        <input disabled={disabled} type='text' className='color_input' value={color} onKeyDown={onInputKeyDown} onChange={this.handleInputChange} />\r\n        <div className='color_colorpicker' style={{ ...colorPickerStyle }}>\r\n          {isShowColorPicker && !disabled && <ChromePicker color={color} onChangeComplete={onColorPickerChangeComplete} onChange={this.handleColorPickerChange} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport RawInputColor from '@base/color-input';\r\nimport { ColorResult } from 'react-color';\r\n\r\nimport './style.styl';\r\n\r\ninterface IProps {\r\n  color: string;\r\n  disabled?: boolean;\r\n  onColorChange: (color: string) => void;\r\n  onColorComplete: (color: string) => void;\r\n}\r\n\r\ninterface IState {\r\n  isShowColorPicker: boolean;\r\n  colorPickStyle: React.CSSProperties;\r\n}\r\n\r\nconst MaskStyle = {\r\n  position: 'fixed' as 'fixed',\r\n  left: 0,\r\n  top: 0,\r\n  zIndex: 1,\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport default class ColorInput extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.showColorPicker = this.showColorPicker.bind(this);\r\n    this.hideColorPicker = this.hideColorPicker.bind(this);\r\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n    this.handleColorPickerChangeComplete = this.handleColorPickerChangeComplete.bind(this);\r\n\r\n    this.state = {\r\n      isShowColorPicker: false,\r\n      colorPickStyle: {}\r\n    };\r\n  }\r\n\r\n  inputRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  static defaultProps = {\r\n    disabled: false\r\n  };\r\n\r\n  handleColorPickerChangeComplete(colorResult: ColorResult) {\r\n    const { r, g, b, a } = colorResult.rgb;\r\n    const color = `rgba(${r},${g},${b},${a})`;\r\n    this.props.onColorComplete(color);\r\n  }\r\n\r\n  handleInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    e.key.toLocaleLowerCase() === 'enter' && this.props.onColorComplete(e.currentTarget.value);\r\n  }\r\n\r\n  showColorPicker() {\r\n    if (this.props.disabled) return;\r\n    let rect = this.inputRef.current.getBoundingClientRect();\r\n    this.setState({\r\n      isShowColorPicker: true,\r\n      colorPickStyle: {\r\n        zIndex: 1,\r\n        position: 'fixed',\r\n        top: rect.top + 25,\r\n        left: rect.left - 200\r\n      }\r\n    });\r\n  }\r\n\r\n  hideColorPicker() {\r\n    this.setState({ isShowColorPicker: false });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\r\n    return this.props.disabled !== nextProps.disabled || this.props.color !== nextProps.color || this.state.isShowColorPicker !== nextState.isShowColorPicker;\r\n  }\r\n\r\n  render() {\r\n    const { color, onColorChange, disabled } = this.props;\r\n    const { isShowColorPicker, colorPickStyle } = this.state;\r\n    return (\r\n      <div ref={this.inputRef} style={{ display: 'inline-block' }}>\r\n        <div className='color_mask' onClick={this.hideColorPicker} hidden={!isShowColorPicker} style={{ ...MaskStyle }}></div>\r\n        <RawInputColor colorPickerStyle={colorPickStyle} disabled={disabled} onColorChange={onColorChange} onInputKeyDown={this.handleInputKeyDown} onColorPickerChangeComplete={this.handleColorPickerChangeComplete} style={{ position: 'relative' }}\r\n          isShowColorPicker={isShowColorPicker} onColorPreviewClick={this.showColorPicker} color={color} >\r\n        </RawInputColor>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport update from 'immutability-helper';\r\nimport Item from '@components/setting-item';\r\nimport ColorInput from '@components/color-input';\r\nimport { Switch, InputNumber, Select } from 'antd';\r\nimport { IControlProps } from '@controls/index';\r\nimport { Series } from '@charts';\r\n\r\ninterface IState {\r\n  color: string;\r\n}\r\n\r\n// each series has the same label\r\nexport default class Label extends React.Component<IControlProps, IState> {\r\n  constructor(props: IControlProps) {\r\n    super(props);\r\n    this.handleShowChange = this.handleShowChange.bind(this);\r\n    this.handleFontColorChange = this.handleFontColorChange.bind(this);\r\n    this.handleFontColorComplete = this.handleFontColorComplete.bind(this);\r\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\r\n    this.handleFontWeightChange = this.handleFontWeightChange.bind(this);\r\n    this.handleFontStyle = this.handleFontStyle.bind(this);\r\n    this.handleRotateChange = this.handleRotateChange.bind(this);\r\n\r\n    this.state = {\r\n      color: ''\r\n    };\r\n  }\r\n\r\n  getNewSeries(key: string, value: any) {\r\n    const { series } = this.props.chart.option;\r\n    let newSeries: Series[] = [];\r\n    series.forEach((item) => {\r\n      newSeries.push(update(item, {\r\n        label: {\r\n          [key]: { $set: value }\r\n        }\r\n      }));\r\n    });\r\n    return newSeries;\r\n  }\r\n\r\n  handleShowChange(checked: boolean) {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('show', checked);\r\n\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          show: { $set: checked }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontColorChange(color: string) {\r\n    this.setState({ color });\r\n  }\r\n\r\n  handleFontColorComplete(color: string) {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('color', color);\r\n\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          color: { $set: color }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontSizeChange(fontSize: number) {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('fontSize', fontSize);\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          fontSize: { $set: fontSize }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontWeightChange(fontWeight: 'normal' | 'lighter' | 'bold') {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('fontWeight', fontWeight);\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          fontWeight: { $set: fontWeight }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontStyle(fontStyle: 'normal' | 'italic' | 'oblique') {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('fontStyle', fontStyle);\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          fontStyle: { $set: fontStyle }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleRotateChange(rotate: number) {\r\n    const { updateChart, chart } = this.props;\r\n    let newSeries = this.getNewSeries('rotate', rotate);\r\n    updateChart(update(chart, {\r\n      seriesItemTemplate: {\r\n        label: {\r\n          rotate: { $set: rotate }\r\n        }\r\n      },\r\n      option: {\r\n        series: { $set: newSeries }\r\n      }\r\n    }));\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: IControlProps) {\r\n    const { color } = nextProps.chart.seriesItemTemplate.label;\r\n    return { color };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IControlProps, nextState: IState) {\r\n    return nextProps.chart.seriesItemTemplate.label !== this.props.chart.seriesItemTemplate.label\r\n      || nextState.color !== this.state.color;\r\n  }\r\n\r\n  render() {\r\n    const { label: { show, fontSize, fontWeight, fontStyle, rotate } } = this.props.chart.seriesItemTemplate;\r\n    const type = this.props.chart.type;\r\n    return (\r\n      <div>\r\n        <Item name='显示'>\r\n          <Switch checked={show} onChange={this.handleShowChange} />\r\n        </Item>\r\n        {type === 'bar' &&\r\n          <Item name='字体颜色'>\r\n            <ColorInput color={this.state.color} onColorChange={this.handleFontColorChange} onColorComplete={this.handleFontColorComplete} />\r\n          </Item>\r\n        }\r\n        <Item className='fontsize' name='字体大小'>\r\n          <InputNumber value={fontSize} size='small' onChange={this.handleFontSizeChange} />\r\n          <Select size='small' defaultValue={fontWeight} onChange={this.handleFontWeightChange}>\r\n            <Select.Option value='normal' >normal</Select.Option>\r\n            <Select.Option value='lighter' >lighter</Select.Option>\r\n            <Select.Option value='bold' >bold</Select.Option>\r\n          </Select>\r\n        </Item>\r\n        <Item name='字体样式'>\r\n          <Select size='small' defaultValue={fontStyle} onChange={this.handleFontStyle}>\r\n            <Select.Option value='normal' >normal</Select.Option>\r\n            <Select.Option value='italic' >italic</Select.Option>\r\n            <Select.Option value='oblique' >oblique</Select.Option>\r\n          </Select>\r\n        </Item>\r\n        {type === 'bar' &&\r\n          <Item name='旋转角度'>\r\n            <InputNumber size='small' value={rotate} onChange={this.handleRotateChange} />\r\n          </Item>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}