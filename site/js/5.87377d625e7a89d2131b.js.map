{"version":3,"sources":["webpack:///./FrontEnd/controls/pile/index.tsx"],"names":["Pile","react__WEBPACK_IMPORTED_MODULE_0__","Component","[object Object]","props","super","this","handleSeriesChange","bind","handleSwitchChange","handleInputChange","state","select","value","setState","checked","stack","chart","updateChart","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","option","series","$set","e","target","map","item","idx","createElement","antd_es_select__WEBPACK_IMPORTED_MODULE_4__","a","Option","key","nextProps","prevState","length","nextState","style","color","textAlign","_components_setting_item__WEBPACK_IMPORTED_MODULE_6__","name","size","onChange","renderSeries","antd_es_switch__WEBPACK_IMPORTED_MODULE_2__","className"],"mappings":"+MAUcA,UAAoBC,EAAAC,UAChCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,mBAAqBD,KAAKC,mBAAmBC,KAAKF,MACvDA,KAAKG,mBAAqBH,KAAKG,mBAAmBD,KAAKF,MACvDA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MAErDA,KAAKK,OACHC,OAAQ,GAIZT,mBAAmBU,GACjBP,KAAKQ,UACHF,OAAQC,IAIZV,mBAAmBY,GACjB,IAAIC,EAAQD,EAAU,KAAO,KAC7B,MAAME,MAAEA,EAAKC,YAAEA,GAAgBZ,KAAKF,OAC9BQ,OAAEA,GAAWN,KAAKK,MACxBO,EAAYC,IAAOF,GACjBG,QACEC,QACElB,CAACS,IACCI,OAASM,KAAMN,SAOzBb,kBAAkBoB,GAChB,MAAMP,EAAQO,EAAEC,OAAOX,OACjBD,OAAEA,GAAWN,KAAKK,OAClBO,YAAEA,EAAWD,MAAEA,GAAUX,KAAKF,MACpCc,EAAYC,IAAOF,GACjBG,QACEC,QACElB,CAACS,IACCI,OAASM,KAAMN,SAOzBb,eACE,MAAMkB,OAAEA,GAAWf,KAAKF,MAAMa,MAAMG,OACpC,OAAOC,EAAOI,IAAI,CAACC,EAAMC,IAChB1B,EAAA2B,cAACC,EAAAC,EAAOC,QAAOC,IAAKL,EAAKd,MAAOc,QAAYA,EAAM,MAI7DxB,gCAAgC8B,EAA0BC,GACxD,OAAID,EAAUhB,MAAMG,OAAOC,OAAOc,QAAUD,EAAUtB,QAC3CA,OAAQ,GAEZ,KAGTT,sBAAsB8B,EAA0BG,GAC9C,OAAOA,EAAUxB,SAAWN,KAAKK,MAAMC,QAClCqB,EAAUhB,MAAMG,OAAOC,OAAOf,KAAKK,MAAMC,UAAYN,KAAKF,MAAMa,MAAMG,OAAOC,OAAOf,KAAKK,MAAMC,QAGtGT,SACE,MAAMkB,OAAEA,GAAWf,KAAKF,MAAMa,MAAMG,OAEpC,GAAsB,IAAlBC,EAAOc,OACT,OAAOlC,EAAA2B,cAAA,OAAKS,OAASC,MAAO,OAAQC,UAAW,WAAU,QAI3D,IAAIvB,EADeK,EAAOf,KAAKK,MAAMC,QACdI,MAMvB,gBAJWA,IACTA,EAAQ,MAIRf,EAAA2B,cAAA,WACE3B,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,QACTxC,EAAA2B,cAACC,EAAAC,GAAOY,KAAK,QAAQ7B,MAAOP,KAAKK,MAAMC,OAAQ+B,SAAUrC,KAAKC,oBAC3DD,KAAKsC,iBAGV3C,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,MACTxC,EAAA2B,cAACiB,EAAAf,GAAOf,QAAmB,OAAVC,EAAgB2B,SAAUrC,KAAKG,sBAGtC,OAAVO,GACAf,EAAA2B,cAACY,EAAAV,GAAKW,KAAK,SACTxC,EAAA2B,cAAA,SAAOkB,UAAU,QAAQjC,MAAOG,EAAO2B,SAAUrC,KAAKI","file":"js/5.87377d625e7a89d2131b.js","sourcesContent":["import * as React from 'react';\nimport update from 'immutability-helper';\nimport { Switch, Select } from 'antd';\nimport Item from '@components/setting-item';\nimport { IControlProps } from '@controls/index';\n\ninterface IState {\n  select: any;\n}\n\nexport default class Pile extends React.Component<IControlProps, IState> {\n  constructor(props: IControlProps) {\n    super(props);\n    this.handleSeriesChange = this.handleSeriesChange.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    this.state = {\n      select: 0\n    };\n  }\n\n  handleSeriesChange(value: any) {\n    this.setState({\n      select: value\n    });\n  }\n\n  handleSwitchChange(checked: boolean) {\n    let stack = checked ? '默认' : null;\n    const { chart, updateChart } = this.props;\n    const { select } = this.state;\n    updateChart(update(chart, {\n      option: {\n        series: {\n          [select]: {\n            stack: { $set: stack }\n          }\n        }\n      }\n    }));\n  }\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const stack = e.target.value;\n    const { select } = this.state;\n    const { updateChart, chart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        series: {\n          [select]: {\n            stack: { $set: stack }\n          }\n        }\n      }\n    }));\n  }\n\n  renderSeries() {\n    const { series } = this.props.chart.option;\n    return series.map((item, idx) => {\n      return <Select.Option key={idx} value={idx} >{`系列${idx + 1}`}</Select.Option>;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: IControlProps, prevState: IState) {\n    if (nextProps.chart.option.series.length <= prevState.select) {\n      return { select: 0 };\n    }\n    return null;\n  }\n\n  shouldComponentUpdate(nextProps: IControlProps, nextState: IState) {\n    return nextState.select !== this.state.select\n      || nextProps.chart.option.series[this.state.select] !== this.props.chart.option.series[this.state.select];\n  }\n\n  render() {\n    const { series } = this.props.chart.option;\n\n    if (series.length === 0) {\n      return <div style={{ color: '#fff', textAlign: 'center' }}>系列为空</div>;\n    }\n\n    const seriesItem = series[this.state.select];\n    let stack = seriesItem.stack;\n\n    if (typeof stack === 'undefined') {\n      stack = null;\n    }\n\n    return (\n      <div>\n        <Item name='选择系列'>\n          <Select size='small' value={this.state.select} onChange={this.handleSeriesChange}>\n            {this.renderSeries()}\n          </Select>\n        </Item>\n        <Item name='开启'>\n          <Switch checked={stack !== null} onChange={this.handleSwitchChange} />\n        </Item>\n        {\n          stack !== null &&\n          <Item name='stack'>\n            <input className='input' value={stack} onChange={this.handleInputChange} />\n          </Item>\n        }\n      </div>\n    );\n  }\n}"],"sourceRoot":""}