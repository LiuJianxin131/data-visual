{"version":3,"sources":["webpack:///./FrontEnd/controls/size-position/index.tsx"],"names":["Input","_components_double_input__WEBPACK_IMPORTED_MODULE_3__","a","SizePosition","react__WEBPACK_IMPORTED_MODULE_0__","Component","[object Object]","props","super","this","handleWidthChange","bind","handleHeightChange","handleLeftChange","handleTopChange","width","chart","updateChart","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","size","$set","height","left","position","top","num","roundNum","Math","round","isNaN","nextProps","createElement","_components_setting_item__WEBPACK_IMPORTED_MODULE_2__","name","min","value","onChange"],"mappings":"kLAMA,MAAMA,EAAQC,EAAAC,EAAYF,YAEZG,UAA4BC,EAAAC,UACxCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,kBAAoBD,KAAKC,kBAAkBC,KAAKF,MACrDA,KAAKG,mBAAqBH,KAAKG,mBAAmBD,KAAKF,MACvDA,KAAKI,iBAAmBJ,KAAKI,iBAAiBF,KAAKF,MACnDA,KAAKK,gBAAkBL,KAAKK,gBAAgBH,KAAKF,MAGnDH,kBAAkBS,GAChB,MAAMC,MAAEA,EAAKC,YAAEA,GAAgBR,KAAKF,MACpCU,EAAYC,IAAOF,GACjBG,MACEJ,OACEK,KAAML,OAMdT,mBAAmBe,GACjB,MAAML,MAAEA,EAAKC,YAAEA,GAAgBR,KAAKF,MACpCU,EAAYC,IAAOF,GACjBG,MACEE,QACED,KAAMC,OAMdf,iBAAiBgB,GACf,MAAMN,MAAEA,EAAKC,YAAEA,GAAgBR,KAAKF,MACpCU,EAAYC,IAAOF,GACjBO,UACED,MACEF,KAAME,OAMdhB,gBAAgBkB,GACd,MAAMR,MAAEA,EAAKC,YAAEA,GAAgBR,KAAKF,MACpCU,EAAYC,IAAOF,GACjBO,UACEC,KACEJ,KAAMI,OAMdlB,MAAMmB,GACJ,IAAIC,EAAWC,KAAKC,MAAMH,GAC1B,OAAII,MAAMH,GACDD,EAEFC,EAGTpB,sBAAsBwB,GACpB,OAAOA,EAAUd,MAAMG,OAASV,KAAKF,MAAMS,MAAMG,MAAQW,EAAUd,MAAMO,WAAad,KAAKF,MAAMS,MAAMO,SAGzGjB,SACE,IAAMiB,UAAUD,KAAEA,EAAIE,IAAEA,GAAOL,MAAMJ,MAAEA,EAAKM,OAAEA,IAAaZ,KAAKF,MAAMS,MAGtE,OAFAM,EAAOb,KAAKmB,MAAMN,GAAOE,EAAMf,KAAKmB,MAAMJ,GACxCT,EAAQN,KAAKmB,MAAMb,GAAQM,EAASZ,KAAKmB,MAAMP,GAE/CjB,EAAA2B,cAAA,WACE3B,EAAA2B,cAACC,EAAA9B,GAAK+B,KAAK,MACT7B,EAAA2B,cAAC9B,EAAAC,EAAW,KACVE,EAAA2B,cAAC/B,GAAMiC,KAAK,KAAKC,IAAK,EAAGC,MAAOpB,EAAOqB,SAAU3B,KAAKC,oBACtDN,EAAA2B,cAAC/B,GAAMiC,KAAK,KAAKC,IAAK,EAAGC,MAAOd,EAAQe,SAAU3B,KAAKG,uBAG3DR,EAAA2B,cAACC,EAAA9B,GAAK+B,KAAK,MACT7B,EAAA2B,cAAC9B,EAAAC,EAAW,KACVE,EAAA2B,cAAC/B,GAAMiC,KAAK,KAAKE,MAAOb,EAAMc,SAAU3B,KAAKI,mBAC7CT,EAAA2B,cAAC/B,GAAMiC,KAAK,KAAKE,MAAOX,EAAKY,SAAU3B,KAAKK","file":"js/10.848d82d6214b86faf8c3.js","sourcesContent":["import * as React from 'react';\r\nimport update from 'immutability-helper';\r\nimport Item from '@components/setting-item';\r\nimport DoubleInput from '@components/double-input';\r\nimport { IControlProps } from '@controls/index';\r\n\r\nconst Input = DoubleInput.Input;\r\n\r\nexport default class SizePosition extends React.Component<IControlProps, undefined> {\r\n  constructor(props: IControlProps) {\r\n    super(props);\r\n    this.handleWidthChange = this.handleWidthChange.bind(this);\r\n    this.handleHeightChange = this.handleHeightChange.bind(this);\r\n    this.handleLeftChange = this.handleLeftChange.bind(this);\r\n    this.handleTopChange = this.handleTopChange.bind(this);\r\n  }\r\n\r\n  handleWidthChange(width: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      size: {\r\n        width: {\r\n          $set: width\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleHeightChange(height: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      size: {\r\n        height: {\r\n          $set: height\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleLeftChange(left: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      position: {\r\n        left: {\r\n          $set: left\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleTopChange(top: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      position: {\r\n        top: {\r\n          $set: top\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  round(num: number) {\r\n    let roundNum = Math.round(num);\r\n    if (isNaN(roundNum)) {\r\n      return num;\r\n    }\r\n    return roundNum;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IControlProps) {\r\n    return nextProps.chart.size !== this.props.chart.size || nextProps.chart.position !== this.props.chart.position;\r\n  }\r\n\r\n  render() {\r\n    let { position: { left, top }, size: { width, height } } = this.props.chart;\r\n    left = this.round(left), top = this.round(top),\r\n      width = this.round(width), height = this.round(height);\r\n    return (\r\n      <div>\r\n        <Item name='尺寸'>\r\n          <DoubleInput>\r\n            <Input name='宽度' min={0} value={width} onChange={this.handleWidthChange} />\r\n            <Input name='高度' min={0} value={height} onChange={this.handleHeightChange} />\r\n          </DoubleInput>\r\n        </Item>\r\n        <Item name='位置'>\r\n          <DoubleInput>\r\n            <Input name='横轴' value={left} onChange={this.handleLeftChange} />\r\n            <Input name='纵轴' value={top} onChange={this.handleTopChange} />\r\n          </DoubleInput>\r\n        </Item>\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}