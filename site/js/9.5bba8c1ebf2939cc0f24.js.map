{"version":3,"sources":["webpack:///./FrontEnd/base/color-input/index.tsx","webpack:///./FrontEnd/components/color-input/index.tsx","webpack:///./FrontEnd/controls/legend/index.tsx"],"names":["color_input_ColorInput","react","Component","[object Object]","props","super","this","handleColorPickerChange","bind","handleInputChange","e","onColorChange","target","value","colorResult","color","hex","rgb","a","r","g","b","onColorPreviewClick","isShowColorPicker","onColorPickerChangeComplete","onInputKeyDown","disabled","colorPickerStyle","createElement","className","onClick","style","background","type","onKeyDown","onChange","Object","assign","lib","ChromePicker","onChangeComplete","defaultProps","autoPosition","position","top","zIndex","o","d","t","MaskStyle","left","width","height","components_color_input_ColorInput","inputRef","createRef","showColorPicker","hideColorPicker","handleInputKeyDown","handleColorPickerChangeComplete","state","colorPickStyle","onColorComplete","key","toLocaleLowerCase","currentTarget","rect","current","getBoundingClientRect","setState","nextProps","nextState","ref","display","hidden","771","p","n","i","l","h","s","c","Legend","react__WEBPACK_IMPORTED_MODULE_0__","handlePositionInputChange","handleSwitchChange","handleColorChange","handleColorComplete","handleFontSizeChange","handleFontWeightChange","renderDataOption","handleSelectChange","chart","updateChart","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","option","legend","$set","textStyle","checked","show","fontSize","fontWeight","data","series","forEach","item","name","push","secondItem","map","idx","antd_es_select__WEBPACK_IMPORTED_MODULE_7__","Option","legendData","_components_setting_item__WEBPACK_IMPORTED_MODULE_2__","antd_es_switch__WEBPACK_IMPORTED_MODULE_5__","mode","size","_components_double_input__WEBPACK_IMPORTED_MODULE_3__","Input","_components_color_input__WEBPACK_IMPORTED_MODULE_4__","antd_es_input_number__WEBPACK_IMPORTED_MODULE_9__","defaultValue"],"mappings":"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","file":"js/9.5bba8c1ebf2939cc0f24.js","sourcesContent":["import * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport './style.styl';\r\n\r\ninterface IProps {\r\n  color: string;\r\n  disabled?: boolean;\r\n  colorPickerStyle?: React.CSSProperties;\r\n  isShowColorPicker?: boolean;\r\n  onColorChange?: (color: string) => void;\r\n  onColorPreviewClick?: () => void;\r\n  onColorPickerChangeComplete?: (colorResult: ColorResult) => void;\r\n  onInputKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport default class ColorInput extends React.Component<IProps, undefined> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  static defaultProps = {\r\n    isShowColorPicker: false,\r\n    disabled: false,\r\n    autoPosition: false,\r\n    colorPickerStyle: {\r\n      position: 'relative',\r\n      top: '10px',\r\n      zIndex: 1\r\n    }\r\n  };\r\n\r\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.props.onColorChange(e.target.value);\r\n  }\r\n\r\n  handleColorPickerChange(colorResult: ColorResult) {\r\n    let color = colorResult.hex;\r\n    if (colorResult.rgb.a !== 1) {\r\n      const { r, g, b, a } = colorResult.rgb;\r\n      color = `rgba(${r},${g},${b},${a})`;\r\n    }\r\n    this.props.onColorChange(color);\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props;\r\n    const { onColorPreviewClick, isShowColorPicker, onColorPickerChangeComplete, onInputKeyDown, disabled, colorPickerStyle } = this.props;\r\n    return (\r\n      <div className={`color_input_wrapper ${disabled && 'color_input_wrapper_disable'}`}>\r\n        <div className='color_preview_wrapper' onClick={onColorPreviewClick} >\r\n          <span style={{ background: color }} className='color_preview'></span>\r\n        </div>\r\n        <input disabled={disabled} type='text' className='color_input' value={color} onKeyDown={onInputKeyDown} onChange={this.handleInputChange} />\r\n        <div className='color_colorpicker' style={{ ...colorPickerStyle }}>\r\n          {isShowColorPicker && !disabled && <ChromePicker color={color} onChangeComplete={onColorPickerChangeComplete} onChange={this.handleColorPickerChange} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport RawInputColor from '@base/color-input';\r\nimport { ColorResult } from 'react-color';\r\n\r\nimport './style.styl';\r\n\r\ninterface IProps {\r\n  color: string;\r\n  disabled?: boolean;\r\n  onColorChange: (color: string) => void;\r\n  onColorComplete: (color: string) => void;\r\n}\r\n\r\ninterface IState {\r\n  isShowColorPicker: boolean;\r\n  colorPickStyle: React.CSSProperties;\r\n}\r\n\r\nconst MaskStyle = {\r\n  position: 'fixed' as 'fixed',\r\n  left: 0,\r\n  top: 0,\r\n  zIndex: 1,\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport default class ColorInput extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.showColorPicker = this.showColorPicker.bind(this);\r\n    this.hideColorPicker = this.hideColorPicker.bind(this);\r\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\r\n    this.handleColorPickerChangeComplete = this.handleColorPickerChangeComplete.bind(this);\r\n\r\n    this.state = {\r\n      isShowColorPicker: false,\r\n      colorPickStyle: {}\r\n    };\r\n  }\r\n\r\n  inputRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  static defaultProps = {\r\n    disabled: false\r\n  };\r\n\r\n  handleColorPickerChangeComplete(colorResult: ColorResult) {\r\n    const { r, g, b, a } = colorResult.rgb;\r\n    const color = `rgba(${r},${g},${b},${a})`;\r\n    this.props.onColorComplete(color);\r\n  }\r\n\r\n  handleInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    e.key.toLocaleLowerCase() === 'enter' && this.props.onColorComplete(e.currentTarget.value);\r\n  }\r\n\r\n  showColorPicker() {\r\n    if (this.props.disabled) return;\r\n    let rect = this.inputRef.current.getBoundingClientRect();\r\n    this.setState({\r\n      isShowColorPicker: true,\r\n      colorPickStyle: {\r\n        zIndex: 1,\r\n        position: 'fixed',\r\n        top: rect.top + 25,\r\n        left: rect.left - 200\r\n      }\r\n    });\r\n  }\r\n\r\n  hideColorPicker() {\r\n    this.setState({ isShowColorPicker: false });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\r\n    return this.props.disabled !== nextProps.disabled || this.props.color !== nextProps.color || this.state.isShowColorPicker !== nextState.isShowColorPicker;\r\n  }\r\n\r\n  render() {\r\n    const { color, onColorChange, disabled } = this.props;\r\n    const { isShowColorPicker, colorPickStyle } = this.state;\r\n    return (\r\n      <div ref={this.inputRef} style={{ display: 'inline-block' }}>\r\n        <div className='color_mask' onClick={this.hideColorPicker} hidden={!isShowColorPicker} style={{ ...MaskStyle }}></div>\r\n        <RawInputColor colorPickerStyle={colorPickStyle} disabled={disabled} onColorChange={onColorChange} onInputKeyDown={this.handleInputKeyDown} onColorPickerChangeComplete={this.handleColorPickerChangeComplete} style={{ position: 'relative' }}\r\n          isShowColorPicker={isShowColorPicker} onColorPreviewClick={this.showColorPicker} color={color} >\r\n        </RawInputColor>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport update from 'immutability-helper';\r\nimport Item from '@components/setting-item';\r\nimport DoubleInput from '@components/double-input';\r\nimport ColorInput from '@components/color-input';\r\nimport { Switch, Select, InputNumber } from 'antd';\r\nimport { IControlProps } from '@controls/index';\r\nimport { IComplexData } from '@charts';\r\n\r\ninterface IState {\r\n  color: string;\r\n}\r\n\r\nexport default class Legend extends React.Component<IControlProps, IState> {\r\n  constructor(props: IControlProps) {\r\n    super(props);\r\n    this.handlePositionInputChange = this.handlePositionInputChange.bind(this);\r\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n    this.handleColorChange = this.handleColorChange.bind(this);\r\n    this.handleColorComplete = this.handleColorComplete.bind(this);\r\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\r\n    this.handleFontWeightChange = this.handleFontWeightChange.bind(this);\r\n    this.renderDataOption = this.renderDataOption.bind(this);\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n\r\n    this.state = {\r\n      color: ''\r\n    };\r\n  }\r\n\r\n  handlePositionInputChange(type: 'top' | 'left', value: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          [type]: { $set: value }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleColorChange(color: string) {\r\n    this.setState({ color });\r\n  }\r\n\r\n  handleColorComplete(color: string) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          textStyle: {\r\n            color: { $set: color }\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleSwitchChange(checked: boolean) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          show: { $set: checked }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontSizeChange(value: number) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          textStyle: {\r\n            fontSize: { $set: value }\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleFontWeightChange(value: string) {\r\n    const { chart, updateChart } = this.props;\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          textStyle: {\r\n            fontWeight: { $set: value }\r\n          }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleSelectChange(value: string[]) {\r\n    const { updateChart, chart } = this.props;\r\n\r\n    updateChart(update(chart, {\r\n      option: {\r\n        legend: {\r\n          data: { $set: [...value] }\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  renderDataOption() {\r\n    const { series } = this.props.chart.option;\r\n    let data: string[] = [];\r\n    series.forEach((item) => {\r\n      let name = item.name;\r\n      if (name !== '') {\r\n        data.push(name);\r\n      }\r\n      item.data.forEach((secondItem) => {\r\n        if (typeof secondItem !== 'number') {\r\n          data.push((secondItem as IComplexData).name);\r\n        }\r\n      });\r\n    });\r\n    return data.map((name, idx) => {\r\n      return <Select.Option value={name} key={name + idx}>{name}</Select.Option>;\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps: IControlProps) {\r\n    const { legend: { textStyle: { color }, data } } = nextProps.chart.option;\r\n    let legendData: string[] = [];\r\n    if (typeof data !== 'undefined') {\r\n      legendData = data;\r\n    }\r\n    return { color, data: legendData };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IControlProps, nextState: IState) {\r\n    return nextProps.chart.option.legend !== this.props.chart.option.legend\r\n      || nextState.color !== this.state.color;\r\n  }\r\n\r\n  render() {\r\n    const { show, left, top, textStyle, data } = this.props.chart.option.legend;\r\n    const { fontSize, fontWeight } = textStyle;\r\n    return (\r\n      <div className='legend_wrapper'>\r\n        <Item name='显示'>\r\n          <Switch checked={show} onChange={this.handleSwitchChange} />\r\n        </Item>\r\n        <Item name='图标'>\r\n          <Select value={data} onChange={this.handleSelectChange} style={{ width: '100%' }} mode='multiple' size='small'>\r\n            {this.renderDataOption()}\r\n          </Select>\r\n        </Item>\r\n        <Item name='位置'>\r\n          <DoubleInput>\r\n            <DoubleInput.Input name='横轴' value={left} onChange={(value) => this.handlePositionInputChange('left', value)} />\r\n            <DoubleInput.Input name='纵轴' value={top} onChange={(value) => this.handlePositionInputChange('top', value)} />\r\n          </DoubleInput>\r\n        </Item>\r\n        <Item name='字体颜色'>\r\n          <ColorInput color={this.state.color} onColorChange={this.handleColorChange} onColorComplete={this.handleColorComplete} />\r\n        </Item>\r\n        <Item className='fontsize' name='字体大小'>\r\n          <InputNumber value={fontSize} size='small' onChange={this.handleFontSizeChange} />\r\n          <Select size='small' defaultValue={fontWeight} onChange={this.handleFontWeightChange}>\r\n            <Select.Option value='normal' >normal</Select.Option>\r\n            <Select.Option value='lighter' >lighter</Select.Option>\r\n            <Select.Option value='bold' >bold</Select.Option>\r\n          </Select>\r\n        </Item>\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}