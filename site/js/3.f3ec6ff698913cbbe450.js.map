{"version":3,"sources":["webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/chart/helper/treeHelper.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/component/axis/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/chart/tree/commonLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","webpack:///./node_modules/echarts/lib/chart/sunburst/sunburstAction.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstView.js","webpack:///./node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","webpack:///./node_modules/echarts/lib/chart/sunburst.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/chart/tree/radialLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/chart/tree/orthogonalLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/component/dataset/DatasetModel.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/echarts/index.js"],"names":["BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","forEach","nativeFilter","filter","nativeSlice","slice","nativeMap","map","nativeReduce","reduce","methods","clone","source","result","typeStr","call","isPrimitive","i","len","length","Ctor","constructor","from","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","concat","value","type","nodeType","ownerDocument","document","createElement","primitiveKey","HashMap","isArr","thisMap","this","visit","set","get","removeKey","exports","$override","name","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","data","push","memo","find","curry","isFunction","isString","isTypedArray","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","createHashMap","concatArray","a","b","newArray","offset","noop","t","e","__webpack_require__","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","id","group","_dom","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","ecInstance","coordSysMgr","api","_api","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","ecIns","trigger","isFinished","unfinished","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","_disposed","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","storage","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","restoreData","create","clearColorPalette","render","setBackgroundColor","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","query","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","componentIndex","renderTask","dispose","remove","splice","dirtyList","updateZ","updatePayload","dirty","perform","getPerformArgs","blendMode","traverse","isGroup","blend","setStyle","eachPendingDisplayable","displayable","elCount","node","useHoverLayer","postUpdateFuncs","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","z","zlevel","eveName","dataModel","getDataParams","dataType","eventData","actionType","eventType","isDisposed","clear","series","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","test","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","connect","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","ZImage","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","position","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap","elMap1","anid","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","TIME_REG","quantityExponent","floor","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","DUMMY_COMPONENT_NAME_PREFIX","normalizeToArray","isIdInner","cptOption","innerUniqueIndex","has","defaultEmphasis","subOpts","emphasis","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","isNameSpecified","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","makeInner","random","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","global","dev","formatUtil","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","textContain","numberUtil","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","substr","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","formatTplSimple","getTooltipMarker","extraCssText","formatTime","isUTC","date","utc","M","S","capitalFirst","lt","rb","lb","rt","vec2","v2ApplyTransform","union","other","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","module","wx","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","userAgent","_format","colorPaletteMixin","dataFormatMixin","_layout","createTask","_sourceHelper","prepareSource","getSource","retrieveRawValue","inner","defaultOption","legendDataProvider","visualColorAccessPath","layoutMode","extraOpt","dataTask","dataTaskCount","reset","dataTaskReset","mergeDefaultAndTheme","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","fillDataTextStyle","mergeOption","newSeriesOption","label","getRawData","task","getCurrentTask","getLinkedData","setData","isOverallFilter","setOutputEnd","outputData","getBaseAxis","formatTooltip","multipleSeries","tooltipDims","mapDimension","tooltipDimLen","getRawValue","isValueArr","colorStops","formattedValue","vertially","dimItem","getDimensionInfo","tooltip","displayName","setEachItem","dim","dimInfo","otherDims","dimType","dimHead","valStr","formatSingleValue","colorEl","getName","seriesName","animationEnabled","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","coordDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","pipelineContext","dataDims","nameArr","dataDim","cloneShallow","dataTaskProgress","end","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","Model","componentUtil","_clazz","enableClassManagement","boxLayoutMixin","dependentModels","$constructor","getUID","themeModel","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","Clazz","unshift","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","OrdinalScale","IntervalScale","Scale","calBarWidthAndOffset","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","eachSeriesByType","axis","adjustedScale","axisExtent","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","getAxisRawValue","getLabel","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getOrdinalMeta","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","DataDiffer","Source","_dataProvider","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","globalObj","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","TRANSFERABLE_PROPERTIES","transferProperties","__wrappedMethods","propName","List","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","coordDimIndex","createInvertedIndices","_dimensionInfos","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","_calculationInfo","listProto","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","rawIndex","_getIdFromStore","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","rawExtent","cloneDimStore","originalDimStore","originalChunk","newDimStore","hasItemOption","getDimension","getDimensionsOnCoord","dataDimsOnCoord","dimensionsSummary","encodeFirstDimNotExtra","dims","initData","nameList","dimValueGetter","isInstance","_nameRepeatCount","defaultDimValueGetter","sourceFormat","_dimValueGetter","_initDataFromProvider","pure","getProvider","rawData","start","persistent","nameDimIdx","chunkSize","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","itemName","_nameDimIdx","itemId","_idDimIdx","DataCtor","resizeChunkArray","newStore","getItem","chunkIndex","chunkOffset","dimStorage","_getNameFromStore","clean","invertedIndices","ordinalMeta","categories","chunk","idDimIdx","getIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","initialExtent","dimExtent","currEnd","getApproximateExtent","setApproximateExtent","getCalculationInfo","setCalculationInfo","getSum","rawIndexOf","indices","rawDataIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","getRawDataItem","contextCompat","dimSize","filterSelf","newIndices","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","dimIndex","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","adjustTextPositionOnRect","halfHeight","makeFont","textFont","createDimensions","SOURCE_FORMAT_ORIGINAL","getDimensionTypeByAxis","getCoordSysDefineBySeries","enableDataStack","seriesDataToSource","coordSysDimDefs","coordSysName","registeredCoordSys","coordSysDefine","coordSysDims","axisModel","axisMap","firstCategoryDimIndex","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","categoryAxisMap","stackCalculationInfo","sampleItem","itemOpt","dimName","clazzUtil","createRenderPlanner","renderPlanner","Chart","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","removeAll","incrementalPrepareRender","incrementalRender","chartProto","elSetState","state","childCount","canProgressiveRender","progressMethodMap","progress","forceFirstProgress","TYPE_DELIMITER","IS_CONTAINER","ret","classBase","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","Clz","classAttr","entity","registerClass","container","componentMainType","throwWhenNotFound","o","getAllClassMainTypes","types","hasSubTypes","originalExtend","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","attachEvent","removeEventListener","detachEvent","notLeftMouse","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","modifyAlpha","ctor","axisHelper","fixExtentWithBands","nTick","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","isHorizontal","getRotate","getLabelInterval","labelInterval","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","c","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","categoryMap","cate","visualArr","setVisualToOption","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","opacity","makeDoMap","symbol","getter","setter","symbolCfg","doMapToArray","symbolSize","isCategory","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","getPathToRoot","parentNode","reverse","retrieveTargetInfo","validPayloadTypes","root","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","echarts","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","_number","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineStyle","lineCap","getLineStyle","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","pos","axisTickLabel","tickEls","axisBuilder","isBlank","tickModel","lineStyleModel","tickLen","tickInterval","getInterval","ticksCoords","showMinLabel","showMaxLabel","ticksCnt","ifIgnoreOnTick","tickEl","labelEls","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","categoryData","isSilent","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","labelStr","textEl","targetType","decomposeTransform","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","show","content","formatter","axisRotation","current","firstRect","nextRect","mRotationBack","rawTick","seriesType","defaultSymbolType","legendSymbol","performRawSeries","isSeriesFiltered","hasCallback","dataEach","rawValue","itemModel","itemSymbolType","itemSymbolSize","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","isExtraCoord","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","stackedByDim","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","radar","treemap","boxplot","candlestick","heatmap","parallel","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","_sourceType","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","_source","_data","_offset","_dimSize","providerMethods","seriesLayoutBy","providerProto","arrayRows_column","startIndex","appendDataSimply","arrayRows_row","row","objectRows","countSimply","getItemSimply","keyedColumns","dimensionsDefine","col","newData","newCol","oldCol","typedArray","rawValueGetters","arrayRows","getRawValueSimply","getDimValueSimply","converDataValue","parseAndCollect","retrieveRawAttr","arrySlice","_$handlers","_h","newList","argLen","triggerWithContext","dimensionsInfo","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","completeDimensions","dimsDef","encodeDef","encodeDefine","dimCount","dimensionsCount","generateCoordCount","curve","bbox","CMD","Q","Z","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","excludes","includes","dataZoomModel","getTargetCoordInfo","coordSysLists","eachTargetAxis","dimNames","axisIndex","coordModel","store","coordIndex","axisModels","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","axisTrigger","link","coordSysAxesInfo","collect","getSpanSign","handleEnds","handleIndex","sign","restrict","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","legendModels","findComponents","isSelected","gridModel","getRect","getItemStyle","xAxis","yAxis","grid","isLargeRender","large","dimLen","segCount","tmpIn","tmpOut","dataToPoint","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","clipShape","normalizeUpdateOpt","makeSeriesScope","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","updateData","oldData","SymbolCtor","seriesScope","newIdx","symbolEl","oldIdx","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","incremental","enableAnimation","OTHER_DIMENSIONS","summary","notExtraCoordDimMap","defaultedLabel","coordDimArr","otherDim","otherDimArr","dimArr","encodeLabel","defaultedTooltip","encodeTooltip","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","SERIES_LAYOUT_BY_ROW","fromDataset","dimensionsDetectCount","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","Style","Element","RectText","__clipPaths","invisible","draggable","dragging","culling","cursor","progressive","inplace","afterBrush","rectContain","animateStyle","useStyle","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","debugMode","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","Creater","mappings","__hidden","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","valueState","incrementalApplyVisual","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","viewWidth","viewHeight","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","createListSimply","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","xAxisModel","yAxisModel","xAxisType","yAxisType","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","baseAxisType","otherAxisType","newOptionData","newItem","defaultValueDimensions","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","setting","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","center","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geo","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","linkOption","linkGroup","mapper","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisDefault","OrdinalMeta","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","createByAxisModel","registerSubTypeDefaulter","getDefaultLabel","getScale","symbolProto","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","useNameLabel","onEmphasis","ratio","onNormal","keepLabel","STACK_PREFIX","getSeriesStackId","getAxisKey","barSeries","doCalBarWidthAndOffset","baseAxis","bandWidth","barWidth","barMaxWidth","barGap","barCategoryGap","axisKey","stackId","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","getLayoutOnAxis","widthAndOffsets","axis0","offsetCenter","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","cartesian","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","barMinHeight","valueDim","baseDim","stacked","isValueAxisH","valueAxisStart","onZero","toGlobalCoord","getGlobalExtent","baseValue","baseCoord","roundNumber","_interval","_intervalPrecision","thisExtent","unionExtent","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","_setting","getSetting","unionExtentFromData","_isBlank","normalizeDimensionsDefine","arrayRowsTravelFirst","maxLoop","doGuessOrdinal","sample","detectValue","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","seriesOption","sourceHeader","datasetIndex","datasetOption","completeResult","findPotentialName","potentialNameDimIndex","firstIndex","colArr","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","nameDimIndex","guessOrdinal","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","entryCount","dependentName","thatItem","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","Gradient","addColorStop","roundRectHelper","fixShadow","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","textX","textY","needDrawBg","_children","__storage","children","childOfName","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","getInstance","registerPainter","ZText","_graphic","svgPath","svgImage","svgText","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","appendChild","removeDom","removeChild","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","getTextSvgElement","__textSvgEl","getSvgElement","__svgEl","createElementNS","arrayJoin","NONE","mathRound","PI2","degree","round4","svgEl","bindStyle","isText","lineJoin","miterLimit","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","svgTextDrawRectText","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","textSvgEl","getVerticalAlignForSvg","newPos","transformText","transformCoordToGlobal","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","createTextNode","markerGroupMap","markerModel","__keep","markerModelKey","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","numCalculate","markerTypeCalculator","average","valueIndex","valueDataDim","baseDataDim","dataTransform","radiusAxis","angleAxis","dataFilter","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","html","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","hasLink","edgeId","Polar","_axisHelper","updatePolarScale","polar","getAngleAxis","getRadiusAxis","setAxis","polarCreator","polarList","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","take","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","lineData","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","atan2","__position","halfPercent","cp","__verticalAlign","__textAlign","_updateCommonStl","linePoints","hoverLineStyle","visualColor","visualOpacity","defaultLabelColor","normalText","emphasisText","showLabel","hoverShowLabel","rawVal","labelStyle","linePath","LineGroup","LineDraw","_ctor","lineDrawProto","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","newLineData","itemEl","_clearIncremental","_incremental","clearDisplaybles","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","mainData","struct","structAttr","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","updateSelectedMap","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","axes","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toLocalCoord","labelUnionRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","axisLabelModel","labelCount","isLabelIgnored","singleRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","labelDims","vals","originalLarge","originalProgressive","Component","componentProto","Task","define","_reset","_plan","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","__pipeline","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","outputDueEnd","pipe","downTask","getUpstream","getDownstream","DIMENSION_LABEL_REG","componentSubType","marker","labelProp","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","addDisplayable","notPersistent","addDisplayables","displayables","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","customCursor","customDest","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","createNode","initVML","styleSheets","createStyleSheet","addRule","ATTR","giveStore","newSnapshot","dataZoomId","percentRange","head","snapshot","setSelected","getItemAlign","visualMapModel","itemSize","modelOption","itemAlign","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","controllerVisuals","visualMapping","convertOpacityToAlpha","positionGroup","visualDefault","active","inactive","visualSolution","replacableOptionKeys","dataBound","inRange","outOfRange","itemWidth","itemHeight","borderColor","contentColor","inactiveColor","borderWidth","textGap","_dataExtent","targetVisuals","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","isTargetSeries","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","getDataDimension","optDim","listDimensions","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","getVisualMeta","VISUAL_PRIORITY","getColorVisual","resultVisual","mapping","createOnAllSeries","resetDefines","visualMetaList","visualMeta","stops","outerColors","concreteDim","pieces","calculable","splitList","linkedNodesFinder","effectedModels","seriesModelMap","getTargetSeriesModels","overallReset","filterData","valueRange","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","sizeOrigin","scales","rangeOffset","getSize","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","coordSysModel","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","layoutBox","boxLayoutParams","viewportSize","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","renderInner","maxSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","LegendModel","_updateData","legendData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","itemGap","selectedMode","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","labelInside","currPosition","cursorOtherValue","getAxisDimIndex","shadow","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","actuallyPayload","showLen","hideLen","initialized","unregister","rectBound","positionMap","horizontal","vertical","isPolyline","isLarge","lineCoords","totalCoordsCount","getLineCoordsCount","getLineCoords","curveness","_createPolyline","polylineProto","curveUtil","EffectLine","createLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","__t","animator","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","graphicUtil","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","Parallel","parallelModel","parallelPreprocessor","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","circularLayout","nodeData","unitAngle","eachEdge","node1","node2","x12","y12","simpleLayoutEdge","simpleLayout","getGraph","Graph","createListFromArray","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","coordSysCtor","edgeData","datas","datasAttr","_traversalHelper","eachAfter","eachBefore","_layoutHelper","firstWalk","secondWalk","sep","separation","radialCoordinate","getViewRect","virtualRoot","realRoot","hierNode","modifier","prelim","kx","ky","coorX","coorY","finalCoor","rawX","rawY","nextRight","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","defaultSeparation","defaultAncestor","siblings","subtreeW","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nodeX","radialCoor","DATAS","MAIN_DATA","transferInjection","linkAll","linkSingle","changeInjection","cloneShallowInjection","updateCenterAndZoom","previousZoom","getZoom","getCenter","zoomMin","zoomMax","fixX","fixY","seriesGroup","updateViewOnPan","controllerHost","updateViewOnZoom","newZoom","zoomScale","getStore","resourceKey","userKey","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","region","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","geometries","geometry","exterior","interiors","isDataNaN","itemLayout","_updateController","mapDraw","makeActionBase","mouseX","mouseY","getViewRectAfterRoam","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","transformTo","_viewRect","rawTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","noRoam","actionInfos","fixPosition","labelPositionOutside","setLabel","getMarkerPosition","clampData","legendHoverLink","barMinAngle","rawAxisPosition","axisOffset","posBound","onZeroCoord","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","deduplication","timeAxis","logAxis","logBase","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","dir","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","isMono","drawMono","drawNonMono","last","lastDiff","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","smoothConstraint","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","prepareDataCoordInfo","valueOrigin","valueStart","valueAxisDim","baseDataOffset","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","windingLine","isAroundEqual","polygonContain","Region","MAX_NUMBER","loopGeo","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","coordinates","c2","featureObj","fixExtent","_needCollect","needCollect","_deduplication","_map","dedplication","getOrCreateMap","getOrdinal","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","optDimCount","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultItem","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","echartsAPIList","chartInstance","fetchers","cartesian2d","parallelAxisIndex","fetch","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","paletteNum","globalCoord","smoothSpline","smoothBezier","controlPoints","cp2","shadowTemp","orignalBrush","modified","clipPaths","normalizeRadian","_l","_a","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","notMergeColorLayer","_seriesIndices","_seriesIndicesMap","colorLayer","themeItem","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","q","indexAttr","idAttr","nameAttr","queryCond","components","queryResult","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","r1","r2","r3","r4","total","save","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","Pattern","repeat","createPattern","SHADOW_PROPS","STYLE_COMMON_PROPS","styleProto","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","createRadialGradient","createLinearGradient","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","LRU","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","idStart","ShadowManager","hasShadow","addWithoutUpdate","svgElement","_shadowDom","_shadowDomId","updateDom","domChild","blur","stdDeviation","ClippathManager","parentEl","clipPathEl","svgProxy","pathEl","cloneNode","_textDom","zrLog","GradientManager","gradient","Diff","buildValues","componentPos","componentLen","oldPos","added","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","undefined","commonCount","tokenize","arrayDiff","parseInt10","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","_opts","cssText","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","_paintList","background","visibleList","listLen","newVisibleList","prevSvgElement","textSvgElement","_getDefs","display","_getSize","_width","_height","viewportStyle","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","outerHTML","vmlCore","VMLPainter","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","rectWidth","rectHeight","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","dashstyle","_vmlEl","needTransform","strokeEl","weight","nPoint","zIndex","removeRectText","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sh","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","history","featureManager","restoreLang","Restore","icon","onclick","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","_isZoomActive","featureModel","zoomActive","dataZoomSelectActive","setIconStatus","brushTargetManager","retrieveAxisSetting","nextActive","_dispatchZoomAction","setBatch","found","dzModel","minMaxSpan","getMinMaxSpan","dataZoomOpts","toolboxOpt","feature","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","axisOpt","$fromToolbox","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","tables","seriesGroupByCategoryAxis","otherSeries","meta","headers","columns","items","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","tsv","tsvLines","header","blockMeta","hasName","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","originalData","magicTypeLang","MagicType","getIcons","availableIcons","icons","seriesOptGenreator","markPoint","markLine","radioTypes","radio","newSeriesOpt","getAxesByScale","currentType","saveAsImageLang","SaveAsImage","unusable","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","open","write","evt","bubbles","cancelable","dispatchEvent","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","featureName","oldName","featureOpt","Feature","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","iconStatus","ToolboxModel","showTitle","iconStyle","TimelineAxis","coordExtent","_autoLabelInterval","timelineModel","TimelineView","_axis","_timer","_currentPointer","_mainGroup","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","controlPosition","showPlayBtn","showPrevBtn","showNextBtn","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","setOrigin","targetGroup","toBound","dimIdx","boundIdx","_customizeScale","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","normalLabelModel","_renderControl","playState","getPlayState","makeBtn","iconPath","willRotate","btn","objPath","_handlePlayClick","_renderCurrentPointer","currentIndex","getCurrentIndex","pointerModel","me","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","toCoord","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","TimelineModel","autoPlay","rewind","playInterval","_names","_initData","setCurrentIndex","isIndexMax","setPlayState","dataArr","idxArr","SliderTimelineModel","checkpointStyle","animationDuration","controlStyle","playIcon","stopIcon","nextIcon","prevIcon","transferItem","itemStyleEmphasis","labelNormal","normal","excludeLabelAttr","timelineOpt","timeline","ec2Types","preprocessor","colorUtil","markerHelper","markAreaTransform","maModel","ltCoord","rbCoord","isInifinity","ifMarkLineHasOnlyDim","fromCoord","otherDimIndex","markAreaFilter","getSingleMarkerEndPoint","xPx","yPx","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","coordDimsInfos","optData","__data","labelHoverModel","markArea","markLineTransform","mlModel","baseIndex","mlFrom","mlTo","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","mlData","fromData","__from","toData","__to","lineDrawMap","updateDataVisualAndLayout","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","updateMarkerLayout","mpData","markPointModel","mpModel","symbolDrawMap","symbolDraw","dataOpt","VisualMapView","_getItemAlign","viewData","_getViewData","endsText","_renderEndsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","onHoverLink","hoverLink","findTargetDataIndices","getPieceList","shapeParam","newKey","getSelectedMapKey","visualMapId","VisualMapModel","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","hasSel","pieceInterval","setStop","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","ContinuousView","_shapes","_dataInterval","_handleEnds","_orient","_useHandle","_hoverLinkDataIndices","_hovering","_buildView","_resetInterval","_renderBar","dataRangeText","_updateView","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","barGroup","_applyTransform","shapes","_createBarGroup","createPolygon","getCursor","_dragHandle","textSize","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","handleLabel","handleLabelPoint","indicator","indicatorLabel","indicatorLabelPoint","HOVER_LINK_OUT","_updateInterval","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","dataInterval","getSelected","sizeExtent","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","textPoint","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","HOVER_LINK_SIZE","hoverLinkDataSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","hoverLinkOnHandle","DEFAULT_BAR_BOUND","ContinuousModel","_resetRange","auto","oVals","getColorStopValues","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","cleanStore","coordId","onPan","newX","newY","wrapAndDispatch","panGetRange","onZoom","zoomGetRange","getRange","dataZoomInfos","disabled","dataZoomInfo","theDataZoomId","theCoordId","allCoordIds","newRecord","typePriority","controllerParams","type_true","type_move","type_false","type_undefined","oneType","zoomLock","roamControllerOpt","containsPoint","throttleRate","shouldRecordRange","generateCoordId","DataZoomView","roams","InsideZoomView","_range","coordInfoList","coordInfo","dataZoomOption","_onPan","_onZoom","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","radiusExtent","angleExtent","pointToCoord","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_resetLocation","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","layoutParams","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","showDataShadow","thisAxis","thisDim","displaybles","handles","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","viewExtend","percentExtent","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","calculateDataWindow","valueWindow","_formatLabel","orderedHandleEnds","barTransform","labelPrecision","valueStr","showOrHide","localPoint","dataBackground","fillerColor","handleIcon","handleStyle","showDetail","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","boundValue","boundPercent","targetSeries","seriesExtent","dataWindow","valueSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","calendarModel","rangeData","getRangeInfo","getOrient","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","getCellWidth","getCellHeight","getNextNDay","dataToRect","tl","firstDay","addPoints","formatedDate","getDateInfo","setMonth","getMonth","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","day","_formatterLabel","_yearTextPositionControl","aligns","yearLabel","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","cellSize","isStart","dayLabel","firstDayOfWeek","getFirstDayOfWeek","lweek","fweek","weekText","CalendarModel","mergeAndNormalizeLayoutParams","raw","Calendar","_rangeInfo","_sw","_sh","_firstDayOfWeek","getFullYear","getDate","getDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","weeks","whNames","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","contentShape","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","rg","reversed","allDay","startDateNum","endDateNum","rangeInfo","nthDay","calendarList","calendar","calendarSeries","brushLang","Brush","_brushMode","isBrushed","brushModel","intervals","command","setAreas","updateController","modelId","brushId","$from","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushLink","throttleDelay","inBrush","outOfBrush","setBrushOption","getLineSelectors","selectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v3","v4","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","brushIndex","thisBrushSelected","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","boundingRectBuilders","linkOthers","brushed","hasAxisBrushed","eachActiveState","activeState","seriesBrushSelected","getBoundingRectFromMinMax","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","_mapDraw","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","scaleLimit","makeAction","PolarAxisPointer","coordValue","axisAngle","coordToPoint","axisBuilderAttrs","selfBuilderAttrs","_splitLine","lineColors","lineCount","splitLines","colorIndex","_splitArea","areaStyleModel","areaColors","splitAreas","prevRadius","elementList","getAxisLineShape","rExtent","getRadiusIdx","ticksAngles","_axisLine","_axisTick","tickAngle","_axisLabel","labelsAngles","labelTextAlign","labelTextVerticalAlign","RADIAN","prevAngle","PolarAxisModel","polarIndex","polarId","polarAxisDefaultExtendedOption","foundAxisModel","AngleAxis","dataToAngle","angleToData","RadiusAxis","dataToRadius","radiusToData","_radiusAxis","_angleAxis","minAngle","maxAngle","radiusSpan","angleSpan","barPolar","eventUtil","vendors","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","dispatch","onmouseleave","hideLater","_hideDelay","domStyle","transitionText","transitionDuration","vendorPrefix","borderName","camelCase","assembleCssText","setContent","setEnterable","enterable","viewportRootOffset","isShow","findPointFromSeries","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","makeDispatchAction","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","valueLabelOpt","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","contentSize","viewSize","domWidth","domHeight","gapH","gapV","getOuterSize","isCenterAlign","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","scrollDataIndex","setScrollDataIndex","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","controllerGroup","pageIconSize","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageButtonGap","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageFormatter","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","ScrollableLegendModel","pageButtonItemGap","pageButtonPosition","pageIcons","pageIconColor","pageIconInactiveColor","pageTextStyle","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendFilter","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","newElOptCopy","$action","existItem","isSetLoc","optionList","useElOptionsToUpdate","els","createEl","targetElParent","graphicType","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionStyle","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","containerInfo","bounding","cellWidth","cellHeight","dayCount","dataToCoordSize","dataSize","halfSize","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","dataDimIndex","currDirty","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","targetProps","targetOpacity","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","treeRoot","getViewRoot","rootDepth","initChildren","isAsc","sortOrder","validDataCount","unitRadian","renderRollupNode","rPerLevel","stillShowZeroSum","renderNode","rStart","rEnd","siblingAngle","ROOT_TO_NODE_ACTION","originViewRoot","resetViewRoot","HIGHLIGHT_ACTION","unhighlight","NodeHighlightPolicy","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPiece","sector","hoverIgnore","normalIgnore","SunburstPieceProto","firstCreate","sectorShape","stateStyle","_updateLabel","highlightPolicy","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","midAngle","labelPosition","labelPadding","rotateType","stateAttr","newRoot","renderLabelForZeroData","_oldChildren","processNode","newId","oldId","newNode","oldNode","_onclickEvent","_rootToNode","targetFound","nodeClick","linkTarget","_viewRoot","completeTreeValue","childValue","thisValue","treeOption","percentPrecision","animationType","dataColor","sunburstLayout","colorList","themeRiverLayout","baseY0","layerSeries","getLayerSeries","timeDim","layerPoints","singleLayer","layerNum","pointNum","sums","temp","baseLine","layerIndex","_layers","keyGetter","newLayersGroups","process","oldLayersGroups","points0","points1","layerGroup","rectEl","_layersSeries","nest","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","largestLayer","timeValue","keyIndex","lenCount","indexArr","comparer","index1","index2","nestestValue","nearestIdx","theValue","htmlName","htmlValue","singleAxisHelper","SingleAxisPointer","getPointDimIndex","AxisPointerView","shadowStyle","modelHelper","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","showPointer","showTooltip","showValueMap","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","lastHighlights","axisPointerLastHighlights","newHighlights","toHighlight","toDownplay","SingleAxisView","selfBuilderAttr","splitLineModel","lineInterval","getLineDash","SingleAxis","Single","_init","_adjustAxis","_updateAxisTransform","extentSum","singles","themeRiverVisual","BAR_BORDER_WIDTH_QUERY","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolRepeat","symbolClip","symbolPosition","symbolPatternSize","symbolMeta","symbolRepeatDirection","output","boundingLength","symbolBoundingData","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","categoryDim","categorySize","symbolScale","valueLineWidth","unitLength","pathLen","absBoundingLength","symbolMargin","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","sizeFix","pathPosition","bundlePosition","barRectShape","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","unit","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","labelRect","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","PictorialBarSeries","visualSymbol","Heatmap","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","colorFunc","isInRange","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","gradientPixels","pixelsSingleState","Uint8ClampedArray","HeatmapLayer","visualMapOfThisSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","_renderOnGeo","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","dataSpan","opacityQuery","lineContain","quadraticContain","LargeLineShape","polyline","segs","findDataIndex","LargeLineDraw","largeLineProto","lineEl","_setCommon","__startIndex","isIncremental","EffectPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","_points","accLenArr","_offsets","_length","offsets","linesLayout","_updateLineDraw","trailLength","isSvg","getLayer","_lastZlevel","motionBlur","_showEffect","lastFrameAlpha","_finished","_clearLayer","_lineDraw","hasEffect","isLargeDraw","_hasEffet","_isPolyline","_isLargeDraw","Uint32Arr","Float64Arr","compatEc2","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","progressiveThreshold","effect","largeThreshold","linesVisual","updateRipplePath","rippleGroup","effectCfg","ripplePath","EffectSymbol","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","showEffectOn","pointsLayout","_symbolDraw","effectSymbolDraw","_updateGroupTransform","effectType","rippleEffect","layoutPoints","cDim","candleWidth","barMinWidth","chartLayout","variableDim","constDim","vDims","pmin","pmax","axisDimVal","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","getPoint","ocHighPoint","lowestPoint","whiskerEnds","subPixelOptimizePoint","bodyEnds","addBodyEnd","point1","point2","initBaseline","brushRect","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","seriesItem","CandlestickView","updateStyle","normalItemStyleModel","whiskerEl","whiskerIndex","bodyEl","bodyIndex","CandlestickSeries","color0","borderColor0","animationUpdate","candlestickVisual","candlestickLayout","groupResult","axisList","groupItem","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","boxWidth","halfWidth","median","end1","end5","layEndLine","endCenter","borderColorQuery","globalColors","defaulColor","BoxplotView","WhiskerPath","WhiskerBox","styleUpdater","_createContent","whiskerBoxProto","transInit","makeWhiskerEndsShape","whiskerBoxDrawProto","BoxplotSeries","boxplotVisual","boxplotLayout","minValue","mapValueToColor","customColor","resolveCollisions","nodesByBreadth","nodeGap","ascendingDepth","nodeY","relaxRightToLeft","outEdges","weightedTarget","getEdgeValue","relaxLeftToRight","inEdges","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","nodeWidth","iterations","remainNodes","nextNode","kyArray","ky0","nodeDy","edgeDy","SankeyShape","cpx2","cpy2","halfExtent","curvature","n1Layout","n2Layout","edgeLayout","createGraphFromNodeEdge","SankeySeries","links","getEdgeData","rawDataOpt","layoutIterations","sankeyLayout","sankeyVisual","opacityAccessPath","inactiveOpacity","activeOpacity","opacityMap","itemOpacity","createLinePoints","_dataGroup","_renderForNormal","dataGroup","newDataIndex","oldDataIndex","seriesStyleModel","getRawIndicesByActiveState","theActiveState","parallelIndex","oldAxisGroup","_axisGroup","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","activeIntervals","coverInfoList","coverInfo","parallelAxisId","parallelAxisModel","setActiveIntervals","setAxisExpand","makeStyleMapper","getActiveState","axisExpandable","axisExpandCenter","axisExpandCount","axisExpandWidth","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","parallelAxisDefault","_initDimensions","parallelAxis","ParallelAxis","mathFloor","mathCeil","_axesLayout","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","posInfo","positionTable","rotationTable","axisCoordToPoint","dataDimensions","hasActiveSet","pointCoord","triggerArea","useJump","hasParallelSeries","axisOption","parallelOption","parallelVisual","valueArr","isAscending","funnelAlign","getLinePoints","offY","labelLineModel","isLabelInside","labelLineLen","FunnelPiece","labelLine","funnelPieceProto","labelText","labelLineHoverModel","funnelPiece","piePiece","FunnelSeries","_defaultLabelLine","labelLineNormalOpt","labelLineEmphasisOpt","minSize","funnelLayout","PointerPath","formatLabel","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","detailModel","positions","bbWidth","bbHeight","viewCoordSys","forceLayout","gravity","pp","friction","warmUp","setFixed","setUnfixed","v12","nLen","n1","n2","repFact","rep","graphSeries","preservedPoints","forceModel","initLayout","nodeDataExtent","edgeDataExtent","repulsion","edgeLength","getEdgeByIndex","forceInstance","oldStep","getNodeByIndex","stopped","_simpleLayoutHelper","colorQuery","categoriesData","getCategoriesData","categoryNameIdxMap","categoryNames","curveTool","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","getSymbolSize","__original","originalPoints","straightLineProto","bezierCurveProto","isLine","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","layoutAnimation","_startForceLayoutIteration","_layouting","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","isLeft","focusNodeAdjacency","adjacentEdge","unfocusNodeAdjacency","nodeScale","nodeScaleRatio","groupScale","groupZoom","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","hostGraph","Edge","isDirected","nodesMap","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","GraphSeries","_categoriesData","_updateCategoriesData","categoryModel","_categoriesModels","edgeLabelModel","fakeSeriesModel","edgeGetParent","sourceName","targetName","circular","rotateLabel","edgeSymbol","edgeSymbolSize","edgeLabel","roam","categoryFilter","categoryVisual","edgeVisual","createView","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","rootRect","viewAbovePath","rootSize","currNode","defaultSize","viewArea","zoomToNodeRatio","currNodeValue","getUpperLabelHeight","squareRatio","leafDepth","viewRootLayout","squarify","hideChildren","thisLayout","nodeModel","halfGapWidth","upperLabelHeight","upperHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","orderedChildren","visibleMin","deletePoint","isLeafRoot","rowFixedLength","best","score","worst","childrenVisibleMin","defaultPosition","targetCenter","nodeLayout","setLayoutInfo","prunning","clipRect","nodeInViewAbovePath","isAboveViewRoot","isInView","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","thisNodeColor","nodeItemStyleModel","levelItemStyle","visualName","borderColorSaturation","calculateColor","rangeVisual","getRangeVisual","visualMin","visualMax","colorMappingBy","__drColorMappingBy","childVisual","childVisuals","mappingType","mapIdToIndex","getValueVisualDefine","actionTypes","createWrap","doneCallback","elExistsMap","ARRAY_LENGTH","Breadcrumb","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","emptyItemWidth","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","nodeGroup","_oldTree","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","thisNode","willDeleteEls","storageName","delEls","__tmWillDelete","animationWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_clearController","rootLayout","findTarget","_zoomToNode","bgEl","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","__tmWillVisible","upperLabelRect","iconChar","emphasisLabelModel","lasts","zInLevel","zb","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","hoverLayerThreshold","clipWindow","drillDownIcon","breadcrumb","upperLabel","gapWidth","visualDimension","hasColorDefine","globalColorList","modelColor","idIndexMap","_idIndexMap","_idIndexMapCount","treemapVisual","treemapLayout","commonLayout","expandAndCollapse","updateNode","removeNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","treeDepth","expandTreeDepth","initialTreeDepth","collapsed","orthogonalLayout","radialLayout","mapLocation","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","needsDrawMap","mainSeries","processedMapType","mapSymbolOffsets","subMapSeries","getRegion","mapModel","_renderSymbols","fullData","fullIndex","polygonGroups","__mapOriginalZ2","geoCoordMap","Russia","United States","United States of America","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","regionName","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","dataSelectableMixin","MapSeries","_createSelectableList","_fillOption","seriesNames","otherIndex","showLegendSymbol","dataRangeHoverLink","mapSymbolLayout","mapDataStatistic","createDataSelectAction","polarOptArr","polarNotRadar","polarOpt","radarIndex","getIndicatorAxes","pointsConverter","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","RadarSeries","indicatorAxes","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","splitAreaModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","getIndicatorModels","IndicatorAxis","Radar","_indicatorAxes","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","radarSeries","increaseInterval","fixedMin","fixedMax","halfSplitNumber","radarList","radarLayout","LargeSymbolPath","symbolProxy","symbolProxyShape","fillRect","LargeSymbolDraw","largeSymbolProto","endIndex","byteOffset","extrudeShadow","_updateSymbolDraw","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelLineLen2","leftList","rightList","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","updateDataSelected","hasAnimation","selectedOffset","toggleItemSelected","PiePiece","piePieceProto","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","_createClipPath","PieSeries","hoverOffset","avoidLabelOverlap","pieLayout","getBarItemStyle","getBorderLineDash","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","removeRect","removeSector","animateProperty","animateTarget","isRadial","fixedLineWidth","rawLayout","signX","signY","isPolar","CartesianAxisView","areaInterval","containLabel","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","axisX","axisY","reserved","xAxisExtent","yAxisExtent","samplers","nearest","indexSampler","sampling","sampler","_helper","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","idx1","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","stackedOnCurrent","stackedOnNext","lineAnimationDiff","_poly","isPointsSame","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","xExtent","yExtent","turnPointsIntoStep","stepTurnAt","stepPoints","stepPt","stepPt2","lineGroup","_lineGroup","isCoordSysPolar","prevCoordSys","_coordSys","_polyline","_polygon","isAreaChart","showSymbol","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","coordSysClipShape","_stackedOnPoints","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","clipOverflow","showAllSymbol","dataSample","scaleProto","intervalScaleProto","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","approxTickNum","originalVal","scaleHelper","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","_ordinalMeta","rank","_dataStackHelper","_completeDimensions","_createDimensions","_symbol","createList","createScale","mixinAxisModelCommonMethods","legend","colorAll","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","bockIndex","dataLen","threshold","pipelineMap","stageTaskMap","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","__block","upstreamContext","stubProgress","seriesTaskProgress","resetDefine","legacyFunc","ecModelMock","apiMock","mockMethods","cond","maskColor","mask","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getConfig","seriesLabels","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","colorAccessPath","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","stackInfo","stackInfoMap","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","isTheme","parallelOpt","calendarOpt","radarOpt","geoOpt","regionObj","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOption","oldOptionBackup","newParsedOption","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","indices1","indices2","platform","gradientColor","lineType","_updatePathDirty","_curve","someVectorAt","isTangent","polyHelper","v2Min","v2Max","v2Scale","v2Distance","v2Add","v2Clone","v2Sub","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","w2","w3","mathAtan2","cubic","quadratic","windingCubic","nRoots","y0_","y1_","nExtrema","windingQuadratic","y_","windingArc","x_","containPath","isStroke","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","prevCmd","cpx","cpy","ctlPtx","ctlPty","pathEls","pathList","pathBundle","PATH_COLOR","dotSize","dashSize","GestureMgr","pointPair","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinchEnd","pinchPre","pinchCenter","_event","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","dispatchToElement","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","clearColor","__used","__drawIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","singleCanvas","nodeName","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layerConfig","_needsManuallyCompositing","mainLayer","__builtin__","_domRoot","domRoot","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","_redrawId","layer","_backgroundColor","__hoverMir","elMirror","hoverElements","hoverLayer","displayableSortFunc","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","prevElClipPaths","currentLayer","forcePaint","prevClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","eachOtherLayer","getLayers","updatePrevLayer","incrementalLayerCount","layerConfig","_zlevel","delLayer","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","imgShape","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","Draggable","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","SILENT","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eveType","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","_echarts","_export"],"mappings":"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4vC,EAAAH,GAEA,OADAlhC,EAAAghC,WAAAO,EAAAP,WACAhhC,EAbA,CAHAmK,EAAA8mB,EAAArrB,EAAAC,EAAAO,EAAA26B,IAmmBAj/C,EAAA49C,cACA59C,EAAA69C,cACA79C,EAAAshD,yBAthBA,SAAAj/B,EAAAnE,EAAAoY,GACA,IAAA5mB,EAAAwO,EAAAxO,EACAC,EAAAuO,EAAAvO,EACArI,EAAA4W,EAAA5W,OACAD,EAAA6W,EAAA7W,MACAk6C,EAAAj6C,EAAA,EACAwc,EAAA,OACAC,EAAA,MAEA,OAAA1B,GACA,WACA3S,GAAA4mB,EACA3mB,GAAA4xC,EACAz9B,EAAA,QACAC,EAAA,SACA,MAEA,YACArU,GAAA4mB,EAAAjvB,EACAsI,GAAA4xC,EACAx9B,EAAA,SACA,MAEA,UACArU,GAAArI,EAAA,EACAsI,GAAA2mB,EACAxS,EAAA,SACAC,EAAA,SACA,MAEA,aACArU,GAAArI,EAAA,EACAsI,GAAArI,EAAAgvB,EACAxS,EAAA,SACA,MAEA,aACApU,GAAArI,EAAA,EACAsI,GAAA4xC,EACAz9B,EAAA,SACAC,EAAA,SACA,MAEA,iBACArU,GAAA4mB,EACA3mB,GAAA4xC,EACAx9B,EAAA,SACA,MAEA,kBACArU,GAAArI,EAAAivB,EACA3mB,GAAA4xC,EACAz9B,EAAA,QACAC,EAAA,SACA,MAEA,gBACArU,GAAArI,EAAA,EACAsI,GAAA2mB,EACAxS,EAAA,SACA,MAEA,mBACApU,GAAArI,EAAA,EACAsI,GAAArI,EAAAgvB,EACAxS,EAAA,SACAC,EAAA,SACA,MAEA,oBACArU,GAAA4mB,EACA3mB,GAAA2mB,EACA,MAEA,qBACA5mB,GAAArI,EAAAivB,EACA3mB,GAAA2mB,EACAxS,EAAA,QACA,MAEA,uBACApU,GAAA4mB,EACA3mB,GAAArI,EAAAgvB,EACAvS,EAAA,SACA,MAEA,wBACArU,GAAArI,EAAAivB,EACA3mB,GAAArI,EAAAgvB,EACAxS,EAAA,QACAC,EAAA,SAIA,OACArU,IACAC,IACAmU,YACAC,sBAqbA/jB,EAAAg4B,eACAh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","file":"js/3.f3ec6ff698913cbbe450.js","sourcesContent":["/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.4';\nvar dependencies = {\n  zrender: '4.0.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // stackSeriesData(ecModel);\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `calBarWidthAndOffset` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = [];\n    var isBaseAxisAndHasBarSeries;\n    ecModel.eachSeriesByType('bar', function (seriesModel) {\n      if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n        barSeriesModels.push(seriesModel);\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      }\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barSeriesModels);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barSeriesModels) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(barSeriesModels); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\nvar CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_calculationInfo', '_invertedIndicesMap', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n} // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range\n/*, stack */\n) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  } // stack = stack || false;\n\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices\n  /* && !stack */\n  ) {\n      // Extreme optimization for common case. About 2x faster in chrome.\n      var idx = 0;\n\n      if (dimSize === 1) {\n        var dimStorage = this._storage[dimensions[0]];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n\n            if (val >= min && val <= max) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      } else if (dimSize === 2) {\n        var dimStorage = this._storage[dim0];\n        var dimStorage2 = this._storage[dimensions[1]];\n        var min2 = range[dimensions[1]][0];\n        var max2 = range[dimensions[1]][1];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var chunkStorage2 = dimStorage2[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n            var val2 = chunkStorage2[i];\n\n            if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      }\n    }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      // stack = stack || !!this.getCalculationInfo(dim0);\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i); // var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        var val = this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k]; // var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          var val = this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage;\n  var rawExtent = zrUtil.extend({}, original._rawExtent); // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        rawExtent[dim] = getInitialExtent();\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var canProgressiveRender = seriesModel.pipelineContext.canProgressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = canProgressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  }); // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n  if (stackedDimInfo && (byIndex || stackedByDimInfo)) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n */\n\n\nfunction isDimensionStacked(data, stackedDim, stackedByDim) {\n  return stackedDim && stackedDim === data.getCalculationInfo('stackedDimension') && (stackedByDim != null ? stackedByDim === data.getCalculationInfo('stackedByDimension') : data.getCalculationInfo('isStackedByIndex'));\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","function _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    for (var dataIndex = params.start; dataIndex < params.end; dataIndex++) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalPrepareUpdate(seriesModel, ecModel, api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.incrementalUpdate(params, seriesModel, ecModel, api);\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n      seriesModels.push(seriesModel);\n    }\n  });\n  var barWidthAndOffset = calBarWidthAndOffset(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = baseAxis.onZero || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.3';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation * 180 / Math.PI;\n    attr(textSvgEl, 'transform', 'rotate(' + rotate + ',' + x + ',' + y + ')');\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim, otherDataDim);\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, dim);\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, dim);\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    normalText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (normalText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      normalText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function (node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.canProgressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.canProgressiveRender = pipelineContext.canProgressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && (forceFirstProgress || start < end) && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    }\n  }\n\n  taskIns._progress = progress;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (!visualMapModel.isTargetSeries(seriesModel)) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\necharts.registerProcessor({\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  isOverallFilter: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 2);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: (coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value'])\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.getCategories();\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","function _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function (data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function (data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function (params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function (node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Sunburst action\n */\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function () {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function () {\n    that.onNormal();\n  };\n\n  var onDownplay = function () {\n    that.onDownplay();\n  };\n\n  var onHighlight = function () {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function () {},\n  render: function (seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = virtualRoot.piece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (virtualRoot.piece) {\n          // Update\n          virtualRoot.piece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          virtualRoot.piece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(virtualRoot.piece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function (e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        virtualRoot.piece.on('click', event);\n      } else if (virtualRoot.piece) {\n        // Remove\n        group.remove(virtualRoot.piece);\n        virtualRoot.piece = null;\n      }\n    }\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _initEvents: function () {\n    var that = this;\n\n    var event = function (e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      textAlign: 'right',\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function (seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._finished || seriesModel.pipelineContext.large) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function (data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function (seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function (api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar globalObj = typeof window === 'undefined' ? global : window;\nvar Uint32Arr = globalObj.Uint32Array || Array;\nvar Float64Arr = globalObj.Float64Array || Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function () {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    });\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;","var borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater; // There is no old data only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!this._data) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n\nwhiskerBoxDrawProto.incrementalPrepareUpdate = function (seriesModel, ecModel, api) {\n  this.group.removeAll();\n  this._data = null;\n};\n\nwhiskerBoxDrawProto.incrementalUpdate = function (params, seriesModel, ecModel, api) {\n  var data = seriesModel.getData();\n\n  for (var idx = params.start; idx < params.end; idx++) {\n    var symbolEl = new WhiskerBox(data, idx, this.styleUpdater, true);\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function (option, ecModel) {\n    // Anication is forbiden in progressive data mode.\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var dataDimensions = zrUtil.map(dimensions, function (axisDim) {\n      return data.mapDimension(axisDim);\n    });\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dataDimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function (newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    progressive: null\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var echarts = require(\"../../echarts\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar DatasetModel = echarts.extendComponentModel({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nvar _default = DatasetModel;\nmodule.exports = _default;","require(\"./dataset/DatasetModel\");\n\nvar echarts = require(\"../echarts\");\n\necharts.extendComponentView({\n  type: 'dataset'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  this._visualHandlers = visualHandlers.slice();\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.canProgressiveRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `canProgressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var canProgressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    canProgressiveRender: canProgressiveRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each([this._dataProcessorHandlers, this._visualHandlers], function (stageHandlers) {\n    each(stageHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n      handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n      handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n    }, this);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");"],"sourceRoot":""}