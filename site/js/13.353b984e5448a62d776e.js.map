{"version":3,"sources":["webpack:///./FrontEnd/base/editor/modes.ts","webpack:///./FrontEnd/base/editor/themes.ts","webpack:///./FrontEnd/base/editor/index.tsx","webpack:///./FrontEnd/controls/data-editor/index.tsx"],"names":["modes","javascript","__webpack_require__","e","then","module","__esModule","Object","assign","default","json","themes","dracula","github","editor_Editor","react","Component","[object Object]","props","super","this","elRef","createRef","handleChange","bind","editor","onChange","getValue","mode","theme","value","setEditor","$blockScrolling","Infinity","on","setValue","brace","edit","current","getSession","setMode","setTheme","prevProps","destroy","width","height","createElement","style","ref","defaultProps","d","n","c","t","u","data_editor_DataEditor","updateChart","handleValueChange","chart","seriesItemTemplate","option","series","editSeries","JSON","parse","newSeries","i","length","editSeriesItem","newSeriesItem","data","prototype","toString","call","immutability_helper_default","$merge","foo","key","name","push","$set","err","console","error","editroSeries","forEach","item","stringify","className","onClick"],"mappings":"sHAIO,MAAMA,GACXC,WAAY,IAAMC,EAAAC,EAAA,IAAAC,KAAA,eAAAC,EAAAH,EAAA,4BAAAG,QAAAC,WAAAD,EAAAE,OAAAC,UAAA,iBAAAH,MAAAI,QAAAJ,MAClBK,KAAM,IAAMR,EAAAC,EAAA,IAAAC,KAAA,eAAAC,EAAAH,EAAA,4BAAAG,QAAAC,WAAAD,EAAAE,OAAAC,UAAA,iBAAAH,MAAAI,QAAAJ,OCFDM,GACXC,QAAS,IAAMV,EAAAC,EAAA,IAAAC,KAAA,eAAAC,EAAAH,EAAA,4BAAAG,QAAAC,WAAAD,EAAAE,OAAAC,UAAA,iBAAAH,MAAAI,QAAAJ,MACfQ,OAAQ,IAAMX,EAAAC,EAAA,IAAAC,KAAA,eAAAC,EAAAH,EAAA,4BAAAG,QAAAC,WAAAD,EAAAE,OAAAC,UAAA,iBAAAH,MAAAI,QAAAJ,sRCaVS,UAAsBC,EAAAC,UAC1BC,YAAYC,GACVC,MAAMD,GAIRE,KAAAC,MAAyCN,EAAAO,YAHvCF,KAAKG,aAAeH,KAAKG,aAAaC,KAAKJ,MAY7CH,aAAad,GACNiB,KAAKK,QACVL,KAAKF,MAAMQ,SAASN,KAAKK,OAAOE,YAG5BV,4DACJ,MAAMW,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,GAAUV,KAAKF,YAC9BE,KAAKW,UAAUH,EAAMC,GACtBT,KAAKK,SACVL,KAAKK,OAAOO,gBAAkBC,IAC9Bb,KAAKK,OAAOS,GAAG,SAAUd,KAAKG,cAC9BH,KAAKK,OAAOU,SAASL,MAGjBb,UAAUW,EAAYC,iDACpB7B,EAAM4B,WACNjB,EAAOkB,KACbT,KAAKK,OAASW,EAAAC,KAASjB,KAAKC,MAAMiB,SAClClB,KAAKK,OAAOc,aAAaC,oBAAoBZ,KAC7CR,KAAKK,OAAOgB,sBAAsBZ,OAG9BZ,mBAAmByB,2CACvB,MAAMd,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,GAAUV,KAAKF,MAChCU,IAASc,EAAUd,MAAQC,IAAUa,EAAUb,cAC3CT,KAAKW,UAAUH,EAAMC,IAExBT,KAAKK,QACVL,KAAKK,OAAOU,SAASL,KAGvBb,uBACOG,KAAKK,QACVL,KAAKK,OAAOkB,UAGd1B,SACE,MAAM2B,MAAEA,EAAKC,OAAEA,GAAWzB,KAAKF,MAC/B,OAAOH,EAAA+B,cAAA,OAAKC,OAASH,QAAOC,UAAUG,IAAK5B,KAAKC,SA5C3CP,EAAAmC,cACLL,MAAO,OACPC,OAAQ,OACRf,MAAO,QAAAoB,EAAAC,EAAA,GAAAC,EAAAD,IAAAD,GAAAC,EAAAD,EAAAG,EAAA,4BAAAC,UClBGC,UAA0BxC,EAAAC,UACtCC,YAAYC,GACVC,MAAMD,GACNE,KAAKoC,YAAcpC,KAAKoC,YAAYhC,KAAKJ,MACzCA,KAAKqC,kBAAoBrC,KAAKqC,kBAAkBjC,KAAKJ,MAKvDH,kBAAkBa,GAChBV,KAAKU,MAAQA,EAGfb,cACE,IACE,MAAMuC,YAAEA,EAAWE,MAAEA,GAAUtC,KAAKF,OAC9ByC,mBAAEA,EAAoBC,QAAQC,OAAEA,IAAaH,EAC7CI,EAAaC,KAAKC,MAAM5C,KAAKU,OAEnC,IAAImC,KAEJ,IAAK,IAAIC,EAAI,EAAGC,EAASL,EAAWK,OAAQD,EAAIC,EAAQD,IAAK,CAC3D,MAAME,EAAiBN,EAAWI,GAClC,IAAIG,EACAC,EAKFA,EAFwC,iBAA/BX,EAAmBW,KAAK,IACiC,mBAA/D/D,OAAOgE,UAAUC,SAASC,KAAKd,EAAmBW,KAAK,IACnDF,EAAeE,KAEfI,IAAOf,EAAmBW,MAC/BK,OAAQP,EAAeE,OAI3B,IAAIM,KAEJ,IAAK,IAAIC,KAAOlB,EACF,SAARkB,EAIQ,SAARA,EAKAhB,EAAOM,OAASD,EAClBU,EAAIC,GAAOhB,EAAOK,GAAGW,GAErBD,EAAIC,GAAOlB,EAAmBkB,GAP9BD,EAAIE,KAAOV,EAAeU,KAJ1BF,EAAIN,SAAWA,GAgBnBD,EAAgBK,IAAOf,GACrBgB,OAAQC,IAGVX,EAAUc,KAAKV,GAGjBb,EAAYkB,IAAOhB,GACjBE,QACEC,QAAUmB,KAAMf,OAGpB,MAAOgB,GACPC,QAAQC,MAAMF,IAIlBhE,SACE,MAAQyC,OAASE,QAAQC,OAAEA,KAAezC,KAAKF,MAC/C,IAAIkE,KAQJ,OAPAvB,EAAOwB,QAASC,IACdF,EAAaL,MACXD,KAAMQ,EAAKR,KACXR,KAAMgB,EAAKhB,SAGflD,KAAKU,MAAQiC,KAAKwB,UAAUH,EAAc,KAAM,MAE9CrE,EAAA+B,cAAA,OAAK0C,UAAU,uBACbzE,EAAA+B,cAAChC,GAAOgB,MAAOV,KAAKU,MAAOJ,SAAUN,KAAKqC,kBAAmB7B,KAAK,OAAOC,MAAM,UAAUe,MAAM,OAAOC,OAAO,UAC7G9B,EAAA+B,cAAA,UAAQ2C,QAASrE,KAAKoC,aAAW","file":"js/13.353b984e5448a62d776e.js","sourcesContent":["interface IModes {\n  [p: string]: any;\n}\n\nexport const modes: IModes = {\n  javascript: () => import('brace/mode/javascript'),\n  json: () => import('brace/mode/json')\n  // abap: () => import('brace/mode/abap'),\n  // abc: () => import('brace/mode/abc'),\n  // actionscript: () => import('brace/mode/actionscript'),\n  // ada: () => import('brace/mode/ada'),\n  // apache_conf: () => import('brace/mode/apache_conf'),\n  // applescript: () => import('brace/mode/applescript'),\n  // asciidoc: () => import('brace/mode/asciidoc'),\n  // assembly_x86: () => import('brace/mode/assembly_x86'),\n  // autohotkey: () => import('brace/mode/autohotkey'),\n  // batchfile: () => import('brace/mode/batchfile'),\n  // bro: () => import('brace/mode/bro'),\n  // c9search: () => import('brace/mode/c9search'),\n  // c_cpp: () => import('brace/mode/c_cpp'),\n  // cirru: () => import('brace/mode/cirru'),\n  // clojure: () => import('brace/mode/clojure'),\n  // cobol: () => import('brace/mode/cobol'),\n  // coffee: () => import('brace/mode/coffee'),\n  // coldfusion: () => import('brace/mode/coldfusion'),\n  // csharp: () => import('brace/mode/csharp'),\n  // csound_document: () => import('brace/mode/csound_document'),\n  // csound_orchestra: () => import('brace/mode/csound_orchestra'),\n  // csound_score: () => import('brace/mode/csound_score'),\n  // css: () => import('brace/mode/css'),\n  // curly: () => import('brace/mode/curly'),\n  // d: () => import('brace/mode/d'),\n  // dart: () => import('brace/mode/dart'),\n  // diff: () => import('brace/mode/diff'),\n  // django: () => import('brace/mode/django'),\n  // dockerfile: () => import('brace/mode/dockerfile'),\n  // dot: () => import('brace/mode/dot'),\n  // drools: () => import('brace/mode/drools'),\n  // eiffel: () => import('brace/mode/eiffel'),\n  // ejs: () => import('brace/mode/ejs'),\n  // elixir: () => import('brace/mode/elixir'),\n  // elm: () => import('brace/mode/elm'),\n  // erlang: () => import('brace/mode/erlang'),\n  // forth: () => import('brace/mode/forth'),\n  // fortran: () => import('brace/mode/fortran'),\n  // ftl: () => import('brace/mode/ftl'),\n  // gcode: () => import('brace/mode/gcode'),\n  // gherkin: () => import('brace/mode/gherkin'),\n  // gitignore: () => import('brace/mode/gitignore'),\n  // glsl: () => import('brace/mode/glsl'),\n  // gobstones: () => import('brace/mode/gobstones'),\n  // golang: () => import('brace/mode/golang'),\n  // graphqlschema: () => import('brace/mode/graphqlschema'),\n  // groovy: () => import('brace/mode/groovy'),\n  // haml: () => import('brace/mode/haml'),\n  // handlebars: () => import('brace/mode/handlebars'),\n  // haskell: () => import('brace/mode/haskell'),\n  // haskell_cabal: () => import('brace/mode/haskell_cabal'),\n  // haxe: () => import('brace/mode/haxe'),\n  // hjson: () => import('brace/mode/hjson'),\n  // html: () => import('brace/mode/html'),\n  // html_elixir: () => import('brace/mode/html_elixir'),\n  // html_ruby: () => import('brace/mode/html_ruby'),\n  // ini: () => import('brace/mode/ini'),\n  // io: () => import('brace/mode/io'),\n  // jack: () => import('brace/mode/jack'),\n  // jade: () => import('brace/mode/jade'),\n  // java: () => import('brace/mode/java'),\n  // jsoniq: () => import('brace/mode/jsoniq'),\n  // jsp: () => import('brace/mode/jsp'),\n  // jssm: () => import('brace/mode/jssm'),\n  // jsx: () => import('brace/mode/jsx'),\n  // julia: () => import('brace/mode/julia'),\n  // kotlin: () => import('brace/mode/kotlin'),\n  // latex: () => import('brace/mode/latex'),\n  // lean: () => import('brace/mode/lean'),\n  // less: () => import('brace/mode/less'),\n  // liquid: () => import('brace/mode/liquid'),\n  // lisp: () => import('brace/mode/lisp'),\n  // live_script: () => import('brace/mode/live_script'),\n  // livescript: () => import('brace/mode/livescript'),\n  // logiql: () => import('brace/mode/logiql'),\n  // lsl: () => import('brace/mode/lsl'),\n  // lua: () => import('brace/mode/lua'),\n  // luapage: () => import('brace/mode/luapage'),\n  // lucene: () => import('brace/mode/lucene'),\n  // makefile: () => import('brace/mode/makefile'),\n  // markdown: () => import('brace/mode/markdown'),\n  // mask: () => import('brace/mode/mask'),\n  // matlab: () => import('brace/mode/matlab'),\n  // mavens_mate_log: () => import('brace/mode/mavens_mate_log'),\n  // maze: () => import('brace/mode/maze'),\n  // mel: () => import('brace/mode/mel'),\n  // mips_assembler: () => import('brace/mode/mips_assembler'),\n  // mipsassembler: () => import('brace/mode/mipsassembler'),\n  // mushcode: () => import('brace/mode/mushcode'),\n  // mysql: () => import('brace/mode/mysql'),\n  // nix: () => import('brace/mode/nix'),\n  // nsis: () => import('brace/mode/nsis'),\n  // objectivec: () => import('brace/mode/objectivec'),\n  // ocaml: () => import('brace/mode/ocaml'),\n  // pascal: () => import('brace/mode/pascal'),\n  // perl: () => import('brace/mode/perl'),\n  // pgsql: () => import('brace/mode/pgsql'),\n  // php: () => import('brace/mode/php'),\n  // pig: () => import('brace/mode/pig'),\n  // plain_text: () => import('brace/mode/plain_text'),\n  // powershell: () => import('brace/mode/powershell'),\n  // praat: () => import('brace/mode/praat'),\n  // prolog: () => import('brace/mode/prolog'),\n  // properties: () => import('brace/mode/properties'),\n  // protobuf: () => import('brace/mode/protobuf'),\n  // python: () => import('brace/mode/python'),\n  // r: () => import('brace/mode/r'),\n  // razor: () => import('brace/mode/razor'),\n  // rdoc: () => import('brace/mode/rdoc'),\n  // red: () => import('brace/mode/red'),\n  // rhtml: () => import('brace/mode/rhtml'),\n  // rst: () => import('brace/mode/rst'),\n  // ruby: () => import('brace/mode/ruby'),\n  // rust: () => import('brace/mode/rust'),\n  // sass: () => import('brace/mode/sass'),\n  // scad: () => import('brace/mode/scad'),\n  // scala: () => import('brace/mode/scala'),\n  // scheme: () => import('brace/mode/scheme'),\n  // scss: () => import('brace/mode/scss'),\n  // sh: () => import('brace/mode/sh'),\n  // sjs: () => import('brace/mode/sjs'),\n  // smarty: () => import('brace/mode/smarty'),\n  // snippets: () => import('brace/mode/snippets'),\n  // soy_template: () => import('brace/mode/soy_template'),\n  // space: () => import('brace/mode/space'),\n  // sparql: () => import('brace/mode/sparql'),\n  // sql: () => import('brace/mode/sql'),\n  // sqlserver: () => import('brace/mode/sqlserver'),\n  // stylus: () => import('brace/mode/stylus'),\n  // svg: () => import('brace/mode/svg'),\n  // swift: () => import('brace/mode/swift'),\n  // swig: () => import('brace/mode/swig'),\n  // tcl: () => import('brace/mode/tcl'),\n  // tex: () => import('brace/mode/tex'),\n  // textile: () => import('brace/mode/textile'),\n  // toml: () => import('brace/mode/toml'),\n  // tsx: () => import('brace/mode/tsx'),\n  // turtle: () => import('brace/mode/turtle'),\n  // twig: () => import('brace/mode/twig'),\n  // typescript: () => import('brace/mode/typescript'),\n  // vala: () => import('brace/mode/vala'),\n  // vbscript: () => import('brace/mode/vbscript'),\n  // velocity: () => import('brace/mode/velocity'),\n  // verilog: () => import('brace/mode/verilog'),\n  // vhdl: () => import('brace/mode/vhdl'),\n  // wollok: () => import('brace/mode/wollok'),\n  // xml: () => import('brace/mode/xml'),\n  // xquery: () => import('brace/mode/xquery'),\n  // yaml: () => import('brace/mode/yaml')\n};","export interface IThemes {\n  [p: string]: any;\n}\n\nexport const themes: IThemes = {\n  dracula: () => import('brace/theme/dracula'),\n  github: () => import('brace/theme/github')\n  // ambiance: () => import('brace/theme/ambiance'),\n  // chaos: () => import('brace/theme/chaos'),\n  // chrome: () => import('brace/theme/chrome'),\n  // clouds: () => import('brace/theme/clouds'),\n  // clouds_midnight: () => import('brace/theme/clouds_midnight'),\n  // cobalt: () => import('brace/theme/cobalt'),\n  // crimson_editor: () => import('brace/theme/crimson_editor'),\n  // dawn: () => import('brace/theme/dawn'),\n  // dreamweaver: () => import('brace/theme/dreamweaver'),\n  // eclipse: () => import('brace/theme/eclipse'),\n  // gob: () => import('brace/theme/gob'),\n  // gruvbox: () => import('brace/theme/gruvbox'),\n  // idle_fingers: () => import('brace/theme/idle_fingers'),\n  // iplastic: () => import('brace/theme/iplastic'),\n  // katzenmilch: () => import('brace/theme/katzenmilch'),\n  // kr_theme: () => import('brace/theme/kr_theme'),\n  // kuroir: () => import('brace/theme/kuroir'),\n  // merbivore: () => import('brace/theme/merbivore'),\n  // merbivore_soft: () => import('brace/theme/merbivore_soft'),\n  // mono_industrial: () => import('brace/theme/mono_industrial'),\n  // monokai: () => import('brace/theme/monokai'),\n  // pastel_on_dark: () => import('brace/theme/pastel_on_dark'),\n  // solarized_dark: () => import('brace/theme/solarized_dark'),\n  // solarized_light: () => import('brace/theme/solarized_light'),\n  // sqlserver: () => import('brace/theme/sqlserver'),\n  // terminal: () => import('brace/theme/terminal'),\n  // textmate: () => import('brace/theme/textmate'),\n  // tomorrow: () => import('brace/theme/tomorrow'),\n  // tomorrow_night: () => import('brace/theme/tomorrow_night'),\n  // tomorrow_night_blue: () => import('brace/theme/tomorrow_night_blue'),\n  // tomorrow_night_bright: () => import('brace/theme/tomorrow_night_bright'),\n  // tomorrow_night_eighties: () => import('brace/theme/tomorrow_night_eighties'),\n  // twilight: () => import('brace/theme/twilight'),\n  // vibrant_ink: () => import('brace/theme/vibrant_ink'),\n  // xcode: () => import('brace/theme/xcode')\n};","/// <reference path=\"./index.d.ts\"/>\nimport * as React from 'react';\nimport * as ace from 'brace';\nimport { Mode, Theme } from './type';\nimport { modes } from './modes';\nimport { themes } from './themes';\n\nexport type Mode = Mode;\nexport type Theme = Theme;\n\ninterface IProps {\n  mode: Mode;\n  theme: Theme;\n  value?: string;\n  onChange?: (text: string) => void;\n  width?: string;\n  height?: string;\n}\n\nexport class Editor extends React.Component<IProps, undefined> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  elRef: React.RefObject<HTMLDivElement> = React.createRef();\n  editor: ace.Editor;\n\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    value: ''\n  };\n\n  handleChange(e: any) {\n    if (!this.editor) return;\n    this.props.onChange(this.editor.getValue());\n  }\n\n  async componentDidMount() {\n    const { mode, theme, value } = this.props;\n    await this.setEditor(mode, theme);\n    if (!this.editor) return;\n    this.editor.$blockScrolling = Infinity;\n    this.editor.on('change', this.handleChange);\n    this.editor.setValue(value);\n  }\n\n  async setEditor(mode: Mode, theme: Theme) {\n    await modes[mode]();\n    await themes[theme]();\n    this.editor = ace.edit(this.elRef.current);\n    this.editor.getSession().setMode(`ace/mode/${mode}`);\n    this.editor.setTheme(`ace/theme/${theme}`);\n  }\n\n  async componentDidUpdate(prevProps: IProps) {\n    const { mode, theme, value } = this.props;\n    if (mode !== prevProps.mode || theme !== prevProps.theme) {\n      await this.setEditor(mode, theme);\n    }\n    if (!this.editor) return;\n    this.editor.setValue(value);\n  }\n\n  componentWillUnmount() {\n    if (!this.editor) return;\n    this.editor.destroy();\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return <div style={{ width, height }} ref={this.elRef}></div>;\n  }\n}","import * as React from 'react';\nimport { Editor } from '@base/editor';\nimport update from 'immutability-helper';\nimport { IControlProps } from '@controls/index';\nimport { Data, Series, ISeriesItemTemplate } from '@charts';\n\ninterface IEditSeriesItem {\n  name: string;\n  data: Data[];\n}\n\ntype EditSeries = IEditSeriesItem[];\n\nexport default class DataEditor extends React.Component<IControlProps, undefined> {\n  constructor(props: IControlProps) {\n    super(props);\n    this.updateChart = this.updateChart.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  value: string;\n\n  handleValueChange(value: string) {\n    this.value = value;\n  }\n\n  updateChart() {\n    try {\n      const { updateChart, chart } = this.props;\n      const { seriesItemTemplate, option: { series } } = chart;\n      const editSeries = JSON.parse(this.value) as EditSeries;\n\n      let newSeries: Series[] = [];\n\n      for (let i = 0, length = editSeries.length; i < length; i++) {\n        const editSeriesItem = editSeries[i];\n        let newSeriesItem: any;\n        let data: ReadonlyArray<Data>;\n\n        // merge data\n        if (typeof seriesItemTemplate.data[0] === 'number'\n          || Object.prototype.toString.call(seriesItemTemplate.data[0]) === '[object Array]') {\n          data = editSeriesItem.data;\n        } else {\n          data = update(seriesItemTemplate.data, {\n            $merge: editSeriesItem.data\n          });\n        }\n\n        let foo: ISeriesItemTemplate = {} as ISeriesItemTemplate;\n\n        for (let key in seriesItemTemplate) {\n          if (key === 'data') {\n            foo.data = [...data];\n            continue;\n          }\n          if (key === 'name') {\n            foo.name = editSeriesItem.name;\n            continue;\n          }\n\n          if (series.length > i) {\n            foo[key] = series[i][key];\n          } else {\n            foo[key] = seriesItemTemplate[key];\n          }\n        }\n\n        // merge series\n        newSeriesItem = update(seriesItemTemplate, {\n          $merge: foo\n        });\n\n        newSeries.push(newSeriesItem);\n      }\n\n      updateChart(update(chart, {\n        option: {\n          series: { $set: newSeries }\n        }\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    const { chart: { option: { series } } } = this.props;\n    let editroSeries: EditSeries = [];\n    series.forEach((item) => {\n      editroSeries.push({\n        name: item.name,\n        data: item.data\n      });\n    });\n    this.value = JSON.stringify(editroSeries, null, '\\t');\n    return (\n      <div className='data_editor_wrapper'>\n        <Editor value={this.value} onChange={this.handleValueChange} mode='json' theme='dracula' width='100%' height='600px' />\n        <button onClick={this.updateChart}>更新</button>\n      </div>\n    );\n  }\n}"],"sourceRoot":""}