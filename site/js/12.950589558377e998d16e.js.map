{"version":3,"sources":["webpack:///./FrontEnd/base/color-input/index.tsx","webpack:///./FrontEnd/components/color-input/index.tsx","webpack:///./FrontEnd/controls/title/index.tsx"],"names":["color_input_ColorInput","react","Component","[object Object]","props","super","this","handleColorPickerChange","bind","handleInputChange","e","onColorChange","target","value","colorResult","color","hex","rgb","a","r","g","b","onColorPreviewClick","isShowColorPicker","onColorPickerChangeComplete","onInputKeyDown","disabled","colorPickerStyle","createElement","className","onClick","style","background","type","onKeyDown","onChange","Object","assign","lib","ChromePicker","onChangeComplete","defaultProps","autoPosition","position","top","zIndex","o","d","t","i","MaskStyle","left","width","height","components_color_input_ColorInput","inputRef","createRef","showColorPicker","hideColorPicker","handleInputKeyDown","handleColorPickerChangeComplete","state","colorPickStyle","onColorComplete","key","toLocaleLowerCase","currentTarget","rect","current","getBoundingClientRect","setState","nextProps","nextState","ref","display","hidden","768","n","l","s","h","c","p","RadioGroup","antd_es_radio__WEBPACK_IMPORTED_MODULE_4__","Group","Title","react__WEBPACK_IMPORTED_MODULE_0__","handleSwitchChange","handleText","handleColorChange","handleInputNumberChange","handleRadioChange","handleSelectChange","subColor","checked","chart","updateChart","immutability_helper__WEBPACK_IMPORTED_MODULE_1___default","option","title","show","$set","textType","fontSize","x","fontWeight","textStyle","subtextStyle","text","subtext","_components_setting_item__WEBPACK_IMPORTED_MODULE_11__","margin","name","antd_es_switch__WEBPACK_IMPORTED_MODULE_2__","_components_color_input__WEBPACK_IMPORTED_MODULE_10__","handleColorCompleteChange","antd_es_input_number__WEBPACK_IMPORTED_MODULE_8__","min","size","antd_es_select__WEBPACK_IMPORTED_MODULE_6__","defaultValue","Option"],"mappings":"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","file":"js/12.950589558377e998d16e.js","sourcesContent":["import * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  colorPickerStyle?: React.CSSProperties;\n  isShowColorPicker?: boolean;\n  onColorChange?: (color: string) => void;\n  onColorPreviewClick?: () => void;\n  onColorPickerChangeComplete?: (colorResult: ColorResult) => void;\n  onInputKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  style?: React.CSSProperties;\n}\n\nexport default class ColorInput extends React.Component<IProps, undefined> {\n  constructor(props: IProps) {\n    super(props);\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  static defaultProps = {\n    isShowColorPicker: false,\n    disabled: false,\n    autoPosition: false,\n    colorPickerStyle: {\n      position: 'relative',\n      top: '10px',\n      zIndex: 1\n    }\n  };\n\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onColorChange(e.target.value);\n  }\n\n  handleColorPickerChange(colorResult: ColorResult) {\n    let color = colorResult.hex;\n    if (colorResult.rgb.a !== 1) {\n      const { r, g, b, a } = colorResult.rgb;\n      color = `rgba(${r},${g},${b},${a})`;\n    }\n    this.props.onColorChange(color);\n  }\n\n  render() {\n    const { color } = this.props;\n    const { onColorPreviewClick, isShowColorPicker, onColorPickerChangeComplete, onInputKeyDown, disabled, colorPickerStyle } = this.props;\n    return (\n      <div className={`color_input_wrapper ${disabled && 'color_input_wrapper_disable'}`}>\n        <div className='color_preview_wrapper' onClick={onColorPreviewClick} >\n          <span style={{ background: color }} className='color_preview'></span>\n        </div>\n        <input disabled={disabled} type='text' className='color_input' value={color} onKeyDown={onInputKeyDown} onChange={this.handleInputChange} />\n        <div className='color_colorpicker' style={{ ...colorPickerStyle }}>\n          {isShowColorPicker && !disabled && <ChromePicker color={color} onChangeComplete={onColorPickerChangeComplete} onChange={this.handleColorPickerChange} />}\n        </div>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport RawInputColor from '@base/color-input';\nimport { ColorResult } from 'react-color';\n\nimport './style.styl';\n\ninterface IProps {\n  color: string;\n  disabled?: boolean;\n  onColorChange: (color: string) => void;\n  onColorComplete: (color: string) => void;\n}\n\ninterface IState {\n  isShowColorPicker: boolean;\n  colorPickStyle: React.CSSProperties;\n}\n\nconst MaskStyle = {\n  position: 'fixed' as 'fixed',\n  left: 0,\n  top: 0,\n  zIndex: 1,\n  width: '100%',\n  height: '100%'\n};\n\nexport default class ColorInput extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.showColorPicker = this.showColorPicker.bind(this);\n    this.hideColorPicker = this.hideColorPicker.bind(this);\n    this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n    this.handleColorPickerChangeComplete = this.handleColorPickerChangeComplete.bind(this);\n\n    this.state = {\n      isShowColorPicker: false,\n      colorPickStyle: {}\n    };\n  }\n\n  inputRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  static defaultProps = {\n    disabled: false\n  };\n\n  handleColorPickerChangeComplete(colorResult: ColorResult) {\n    const { r, g, b, a } = colorResult.rgb;\n    const color = `rgba(${r},${g},${b},${a})`;\n    this.props.onColorComplete(color);\n  }\n\n  handleInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    e.key.toLocaleLowerCase() === 'enter' && this.props.onColorComplete(e.currentTarget.value);\n  }\n\n  showColorPicker() {\n    if (this.props.disabled) return;\n    let rect = this.inputRef.current.getBoundingClientRect();\n    this.setState({\n      isShowColorPicker: true,\n      colorPickStyle: {\n        zIndex: 1,\n        position: 'fixed',\n        top: rect.top + 25,\n        left: rect.left - 200\n      }\n    });\n  }\n\n  hideColorPicker() {\n    this.setState({ isShowColorPicker: false });\n  }\n\n  shouldComponentUpdate(nextProps: IProps, nextState: IState) {\n    return this.props.disabled !== nextProps.disabled || this.props.color !== nextProps.color || this.state.isShowColorPicker !== nextState.isShowColorPicker;\n  }\n\n  render() {\n    const { color, onColorChange, disabled } = this.props;\n    const { isShowColorPicker, colorPickStyle } = this.state;\n    return (\n      <div ref={this.inputRef} style={{ display: 'inline-block' }}>\n        <div className='color_mask' onClick={this.hideColorPicker} hidden={!isShowColorPicker} style={{ ...MaskStyle }}></div>\n        <RawInputColor colorPickerStyle={colorPickStyle} disabled={disabled} onColorChange={onColorChange} onInputKeyDown={this.handleInputKeyDown} onColorPickerChangeComplete={this.handleColorPickerChangeComplete} style={{ position: 'relative' }}\n          isShowColorPicker={isShowColorPicker} onColorPreviewClick={this.showColorPicker} color={color} >\n        </RawInputColor>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport update from 'immutability-helper';\nimport { Switch, Radio, Select, InputNumber } from 'antd';\nimport { IControlProps } from '@controls/index';\nimport ColorInput from '@components/color-input';\nimport Item from '@components/setting-item';\n\nconst RadioGroup = Radio.Group;\n\ninterface IState {\n  color: string;\n  subColor: string;\n}\n\nexport default class Title extends React.Component<IControlProps, IState> {\n  constructor(props: IControlProps) {\n    super(props);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.handleText = this.handleText.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.handleInputNumberChange = this.handleInputNumberChange.bind(this);\n    this.handleRadioChange = this.handleRadioChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n\n    this.state = {\n      color: '',\n      subColor: ''\n    };\n  }\n\n  handleSwitchChange(checked: boolean) {\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: { show: { $set: checked } }\n      }\n    }));\n  }\n\n  handleText(e: React.ChangeEvent<HTMLInputElement>, textType: 'text' | 'subtext') {\n    const value = e.target.value;\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: { [textType]: { $set: value } }\n      }\n    }));\n  }\n\n  handleColorChange(color: string, type: 'color' | 'subColor') {\n    if (type === 'color') {\n      this.setState({ color });\n    } else {\n      this.setState({ subColor: color });\n    }\n  }\n\n  handleColorCompleteChange(color: string, type: 'textStyle' | 'subtextStyle') {\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: {\n          [type]: {\n            color: { $set: color }\n          }\n        }\n      }\n    }));\n  }\n\n  handleInputNumberChange(value: number, textType: 'textStyle' | 'subtextStyle') {\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: {\n          [textType]: {\n            fontSize: { $set: value }\n          }\n        }\n      }\n    }));\n  }\n\n  handleRadioChange(e: any) {\n    const value = e.target.value;\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: {\n          x: { $set: value }\n        }\n      }\n    }));\n  }\n\n  handleSelectChange(value: string, type: 'textStyle' | 'subtextStyle') {\n    const { chart, updateChart } = this.props;\n    updateChart(update(chart, {\n      option: {\n        title: {\n          [type]: {\n            fontWeight: { $set: value }\n          }\n        }\n      }\n    }));\n  }\n\n  static getDerivedStateFromProps(nextProps: IControlProps) {\n    const { textStyle, subtextStyle } = nextProps.chart.option.title;\n    return {\n      color: textStyle.color,\n      subColor: subtextStyle.color\n    };\n  }\n\n  shouldComponentUpdate(nextProps: IControlProps, nextState: IState) {\n    return nextProps.chart.option.title !== this.props.chart.option.title\n      || nextState.color !== this.state.color\n      || nextState.subColor !== this.state.subColor;\n  }\n\n  render() {\n    const { show, text, subtext, textStyle, subtextStyle, x } = this.props.chart.option.title;\n    const { color, subColor } = this.state;\n    return (\n      <div className='title_control_wrapper'>\n        <Item style={{ margin: '-5px 8px 0px 8px' }} name='显示'>\n          <Switch checked={show} onChange={this.handleSwitchChange} />\n        </Item>\n        <Item name='对齐'>\n          <RadioGroup value={x} onChange={this.handleRadioChange}>\n            <Radio value='left' style={{ color: '#fff' }}>左</Radio>\n            <Radio value='center' style={{ color: '#fff' }}>中</Radio>\n            <Radio value='right' style={{ color: '#fff' }}>右</Radio>\n          </RadioGroup>\n        </Item>\n        <Item name='标题'>\n          <input className='input' value={text} onChange={(e) => this.handleText(e, 'text')} />\n        </Item>\n        <Item name='标题颜色'>\n          <ColorInput color={color} onColorChange={(color) => this.handleColorChange(color, 'color')} onColorComplete={(color) => this.handleColorCompleteChange(color, 'textStyle')} />\n        </Item>\n        <Item className='fontsize' name='标题大小'>\n          <InputNumber min={1} value={textStyle.fontSize} size='small' onChange={(value: number) => this.handleInputNumberChange(value, 'textStyle')} />\n          <Select size='small' defaultValue={textStyle.fontWeight} onChange={(value: string) => this.handleSelectChange(value, 'textStyle')}>\n            <Select.Option value='normal' >normal</Select.Option>\n            <Select.Option value='lighter' >lighter</Select.Option>\n            <Select.Option value='bold' >bold</Select.Option>\n          </Select>\n        </Item>\n        <Item name='副标题'>\n          <input className='input' value={subtext} onChange={(e) => this.handleText(e, 'subtext')} />\n        </Item>\n        <Item name='副标颜色'>\n          <ColorInput color={subColor} onColorChange={(color) => this.handleColorChange(color, 'subColor')} onColorComplete={(color) => this.handleColorCompleteChange(color, 'subtextStyle')} />\n        </Item>\n        <Item className='fontsize' name='副题大小'>\n          <InputNumber min={1} size='small' value={subtextStyle.fontSize} onChange={(value: number) => this.handleInputNumberChange(value, 'subtextStyle')} />\n          <Select size='small' defaultValue={subtextStyle.fontWeight} onChange={(value: string) => this.handleSelectChange(value, 'subtextStyle')}>\n            <Select.Option value='normal' >normal</Select.Option>\n            <Select.Option value='lighter' >lighter</Select.Option>\n            <Select.Option value='bold' >bold</Select.Option>\n          </Select>\n        </Item>\n      </div>\n    );\n  }\n}"],"sourceRoot":""}